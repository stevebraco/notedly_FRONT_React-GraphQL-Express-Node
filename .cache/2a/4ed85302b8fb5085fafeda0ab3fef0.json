{"id":"../node_modules/micromark/lib/postprocess.js","dependencies":[{"name":"/Users/steve/Documents/Projects/notedly_app/web/package.json","includedInParent":true,"mtime":1634207375173},{"name":"/Users/steve/Documents/Projects/notedly_app/web/.babelrc","includedInParent":true,"mtime":1634038347786},{"name":"/Users/steve/Documents/Projects/notedly_app/web/node_modules/micromark/package.json","includedInParent":true,"mtime":1634207374579},{"name":"micromark-util-subtokenize","loc":{"line":4,"column":26},"parent":"/Users/steve/Documents/Projects/notedly_app/web/node_modules/micromark/lib/postprocess.js","resolved":"/Users/steve/Documents/Projects/notedly_app/web/node_modules/micromark-util-subtokenize/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.postprocess = postprocess;\n\nvar _micromarkUtilSubtokenize = require(\"micromark-util-subtokenize\");\n\n/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nfunction postprocess(events) {\n  while (!(0, _micromarkUtilSubtokenize.subtokenize)(events)) {// Empty\n  }\n\n  return events;\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/micromark/lib/postprocess.js","original":{"line":4,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/micromark/lib/postprocess.js","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"../node_modules/micromark/lib/postprocess.js","original":{"line":10,"column":7}},{"name":"postprocess","generated":{"line":13,"column":9},"source":"../node_modules/micromark/lib/postprocess.js","original":{"line":10,"column":16}},{"generated":{"line":13,"column":20},"source":"../node_modules/micromark/lib/postprocess.js","original":{"line":10,"column":7}},{"name":"events","generated":{"line":13,"column":21},"source":"../node_modules/micromark/lib/postprocess.js","original":{"line":10,"column":28}},{"generated":{"line":13,"column":27},"source":"../node_modules/micromark/lib/postprocess.js","original":{"line":10,"column":7}},{"generated":{"line":13,"column":29},"source":"../node_modules/micromark/lib/postprocess.js","original":{"line":10,"column":36}},{"generated":{"line":14,"column":0},"source":"../node_modules/micromark/lib/postprocess.js","original":{"line":11,"column":2}},{"generated":{"line":14,"column":9},"source":"../node_modules/micromark/lib/postprocess.js","original":{"line":11,"column":9}},{"generated":{"line":14,"column":10},"source":"../node_modules/micromark/lib/postprocess.js","original":{"line":11,"column":10}},{"name":"events","generated":{"line":14,"column":53},"source":"../node_modules/micromark/lib/postprocess.js","original":{"line":11,"column":22}},{"generated":{"line":14,"column":59},"source":"../node_modules/micromark/lib/postprocess.js","original":{"line":11,"column":10}},{"generated":{"line":14,"column":60},"source":"../node_modules/micromark/lib/postprocess.js","original":{"line":11,"column":2}},{"generated":{"line":14,"column":62},"source":"../node_modules/micromark/lib/postprocess.js","original":{"line":11,"column":31}},{"generated":{"line":14,"column":63},"source":"../node_modules/micromark/lib/postprocess.js","original":{"line":12,"column":4}},{"generated":{"line":15,"column":0},"source":"../node_modules/micromark/lib/postprocess.js","original":{"line":13,"column":3}},{"generated":{"line":17,"column":0},"source":"../node_modules/micromark/lib/postprocess.js","original":{"line":15,"column":2}},{"name":"events","generated":{"line":17,"column":9},"source":"../node_modules/micromark/lib/postprocess.js","original":{"line":15,"column":9}},{"generated":{"line":17,"column":15},"source":"../node_modules/micromark/lib/postprocess.js","original":{"line":15,"column":2}},{"generated":{"line":18,"column":0},"source":"../node_modules/micromark/lib/postprocess.js","original":{"line":16,"column":1}}],"sources":{"../node_modules/micromark/lib/postprocess.js":"/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Event[]} events\n * @returns {Event[]}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n"},"lineCount":null}},"error":null,"hash":"1de04eefee6791d78a99f19f2b14be8a","cacheData":{"env":{}}}