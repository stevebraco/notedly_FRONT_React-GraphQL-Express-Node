{"id":"R7fl","dependencies":[{"name":"/Users/steve/Documents/Projects/notedly_app/web/package.json","includedInParent":true,"mtime":1634550415413},{"name":"/Users/steve/Documents/Projects/notedly_app/web/.babelrc","includedInParent":true,"mtime":1634038347786},{"name":"/Users/steve/Documents/Projects/notedly_app/web/node_modules/mdast-util-to-hast/package.json","includedInParent":true,"mtime":1634309499394},{"name":"unist-builder","loc":{"line":6,"column":16},"parent":"/Users/steve/Documents/Projects/notedly_app/web/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","resolved":"/Users/steve/Documents/Projects/notedly_app/web/node_modules/unist-builder/index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.inlineCode=r;var e=require(\"unist-builder\");function r(r,t){return r(t,\"code\",[(0,e.u)(\"text\",t.value.replace(/\\r?\\n|\\r/g,\" \"))])}"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","original":{"line":14,"column":1},"generated":{"line":1,"column":0}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","original":{"line":14,"column":1},"generated":{"line":1,"column":13}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","original":{"line":14,"column":1},"generated":{"line":1,"column":20}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","original":{"line":14,"column":1},"generated":{"line":1,"column":35}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","original":{"line":14,"column":1},"generated":{"line":1,"column":43}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","original":{"line":14,"column":1},"generated":{"line":1,"column":56}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","original":{"line":14,"column":1},"generated":{"line":1,"column":57}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","original":{"line":14,"column":1},"generated":{"line":1,"column":64}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","original":{"line":14,"column":1},"generated":{"line":1,"column":68}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","original":{"line":14,"column":1},"generated":{"line":1,"column":76}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","original":{"line":14,"column":1},"generated":{"line":1,"column":87}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","original":{"line":6,"column":0},"generated":{"line":1,"column":89}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","original":{"line":6,"column":0},"generated":{"line":1,"column":93}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","original":{"line":6,"column":0},"generated":{"line":1,"column":95}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","original":{"line":6,"column":0},"generated":{"line":1,"column":103}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","original":{"line":12,"column":7},"generated":{"line":1,"column":120}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","name":"inlineCode","original":{"line":12,"column":16},"generated":{"line":1,"column":129}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","name":"h","original":{"line":12,"column":27},"generated":{"line":1,"column":131}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","name":"node","original":{"line":12,"column":30},"generated":{"line":1,"column":133}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","name":"h","original":{"line":13,"column":9},"generated":{"line":1,"column":136}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","name":"h","original":{"line":13,"column":9},"generated":{"line":1,"column":143}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","name":"node","original":{"line":13,"column":11},"generated":{"line":1,"column":145}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","original":{"line":13,"column":17},"generated":{"line":1,"column":147}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","original":{"line":13,"column":25},"generated":{"line":1,"column":154}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","original":{"line":13,"column":26},"generated":{"line":1,"column":156}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","original":{"line":13,"column":28},"generated":{"line":1,"column":158}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","original":{"line":13,"column":28},"generated":{"line":1,"column":160}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","original":{"line":13,"column":28},"generated":{"line":1,"column":163}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","name":"node","original":{"line":13,"column":36},"generated":{"line":1,"column":170}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","name":"value","original":{"line":13,"column":41},"generated":{"line":1,"column":172}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","name":"replace","original":{"line":13,"column":47},"generated":{"line":1,"column":178}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","original":{"line":13,"column":55},"generated":{"line":1,"column":186}},{"source":"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","original":{"line":13,"column":68},"generated":{"line":1,"column":198}}],"sources":{"../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js":"/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n"},"lineCount":null}},"error":null,"hash":"242bef157f0119ae2f0236ca85515610","cacheData":{"env":{}}}