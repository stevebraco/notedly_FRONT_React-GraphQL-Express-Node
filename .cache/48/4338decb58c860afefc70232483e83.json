{"id":"../node_modules/micromark-util-character/index.js","dependencies":[{"name":"/Users/steve/Documents/Projects/notedly_app/web/package.json","includedInParent":true,"mtime":1634207375173},{"name":"/Users/steve/Documents/Projects/notedly_app/web/.babelrc","includedInParent":true,"mtime":1634038347786},{"name":"/Users/steve/Documents/Projects/notedly_app/web/node_modules/micromark-util-character/package.json","includedInParent":true,"mtime":1634207374537},{"name":"./lib/unicode-punctuation-regex.js","loc":{"line":4,"column":38},"parent":"/Users/steve/Documents/Projects/notedly_app/web/node_modules/micromark-util-character/index.js","resolved":"/Users/steve/Documents/Projects/notedly_app/web/node_modules/micromark-util-character/lib/unicode-punctuation-regex.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.asciiControl = asciiControl;\nexports.markdownLineEndingOrSpace = markdownLineEndingOrSpace;\nexports.markdownLineEnding = markdownLineEnding;\nexports.markdownSpace = markdownSpace;\nexports.unicodePunctuation = exports.unicodeWhitespace = exports.asciiAtext = exports.asciiPunctuation = exports.asciiAlphanumeric = exports.asciiHexDigit = exports.asciiDigit = exports.asciiAlpha = void 0;\n\nvar _unicodePunctuationRegex = require(\"./lib/unicode-punctuation-regex.js\");\n\n/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nconst asciiAlpha = regexCheck(/[A-Za-z]/);\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexports.asciiAlpha = asciiAlpha;\nconst asciiDigit = regexCheck(/\\d/);\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexports.asciiDigit = asciiDigit;\nconst asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexports.asciiHexDigit = asciiHexDigit;\nconst asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexports.asciiAlphanumeric = asciiAlphanumeric;\nconst asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexports.asciiPunctuation = asciiPunctuation;\nconst asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexports.asciiAtext = asciiAtext;\n\nfunction asciiControl(code) {\n  return (// Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\n\nfunction markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\n\nfunction markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\n\nfunction markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\n\nconst unicodeWhitespace = regexCheck(/\\s/);\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexports.unicodeWhitespace = unicodeWhitespace;\nconst unicodePunctuation = regexCheck(_unicodePunctuationRegex.unicodePunctuationRegex);\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nexports.unicodePunctuation = unicodePunctuation;\n\nfunction regexCheck(regex) {\n  return check;\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code));\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":12,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":4,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":1,"column":0}},{"generated":{"line":17,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":18,"column":7}},{"name":"asciiAlpha","generated":{"line":17,"column":6},"source":"../node_modules/micromark-util-character/index.js","original":{"line":18,"column":13}},{"generated":{"line":17,"column":16},"source":"../node_modules/micromark-util-character/index.js","original":{"line":18,"column":23}},{"name":"regexCheck","generated":{"line":17,"column":19},"source":"../node_modules/micromark-util-character/index.js","original":{"line":18,"column":26}},{"generated":{"line":17,"column":29},"source":"../node_modules/micromark-util-character/index.js","original":{"line":18,"column":36}},{"generated":{"line":17,"column":30},"source":"../node_modules/micromark-util-character/index.js","original":{"line":18,"column":37}},{"generated":{"line":17,"column":40},"source":"../node_modules/micromark-util-character/index.js","original":{"line":18,"column":36}},{"generated":{"line":17,"column":41},"source":"../node_modules/micromark-util-character/index.js","original":{"line":18,"column":7}},{"generated":{"line":18,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":19,"column":0}},{"generated":{"line":26,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":26,"column":7}},{"name":"asciiDigit","generated":{"line":26,"column":6},"source":"../node_modules/micromark-util-character/index.js","original":{"line":26,"column":13}},{"generated":{"line":26,"column":16},"source":"../node_modules/micromark-util-character/index.js","original":{"line":26,"column":23}},{"name":"regexCheck","generated":{"line":26,"column":19},"source":"../node_modules/micromark-util-character/index.js","original":{"line":26,"column":26}},{"generated":{"line":26,"column":29},"source":"../node_modules/micromark-util-character/index.js","original":{"line":26,"column":36}},{"generated":{"line":26,"column":30},"source":"../node_modules/micromark-util-character/index.js","original":{"line":26,"column":37}},{"generated":{"line":26,"column":34},"source":"../node_modules/micromark-util-character/index.js","original":{"line":26,"column":36}},{"generated":{"line":26,"column":35},"source":"../node_modules/micromark-util-character/index.js","original":{"line":26,"column":7}},{"generated":{"line":27,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":27,"column":0}},{"generated":{"line":42,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":41,"column":7}},{"name":"asciiHexDigit","generated":{"line":42,"column":6},"source":"../node_modules/micromark-util-character/index.js","original":{"line":41,"column":13}},{"generated":{"line":42,"column":19},"source":"../node_modules/micromark-util-character/index.js","original":{"line":41,"column":26}},{"name":"regexCheck","generated":{"line":42,"column":22},"source":"../node_modules/micromark-util-character/index.js","original":{"line":41,"column":29}},{"generated":{"line":42,"column":32},"source":"../node_modules/micromark-util-character/index.js","original":{"line":41,"column":39}},{"generated":{"line":42,"column":33},"source":"../node_modules/micromark-util-character/index.js","original":{"line":41,"column":40}},{"generated":{"line":42,"column":45},"source":"../node_modules/micromark-util-character/index.js","original":{"line":41,"column":39}},{"generated":{"line":42,"column":46},"source":"../node_modules/micromark-util-character/index.js","original":{"line":41,"column":7}},{"generated":{"line":43,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":42,"column":0}},{"generated":{"line":52,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":50,"column":7}},{"name":"asciiAlphanumeric","generated":{"line":52,"column":6},"source":"../node_modules/micromark-util-character/index.js","original":{"line":50,"column":13}},{"generated":{"line":52,"column":23},"source":"../node_modules/micromark-util-character/index.js","original":{"line":50,"column":30}},{"name":"regexCheck","generated":{"line":52,"column":26},"source":"../node_modules/micromark-util-character/index.js","original":{"line":50,"column":33}},{"generated":{"line":52,"column":36},"source":"../node_modules/micromark-util-character/index.js","original":{"line":50,"column":43}},{"generated":{"line":52,"column":37},"source":"../node_modules/micromark-util-character/index.js","original":{"line":50,"column":44}},{"generated":{"line":52,"column":49},"source":"../node_modules/micromark-util-character/index.js","original":{"line":50,"column":43}},{"generated":{"line":52,"column":50},"source":"../node_modules/micromark-util-character/index.js","original":{"line":50,"column":7}},{"generated":{"line":53,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":51,"column":0}},{"generated":{"line":63,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":60,"column":7}},{"name":"asciiPunctuation","generated":{"line":63,"column":6},"source":"../node_modules/micromark-util-character/index.js","original":{"line":60,"column":13}},{"generated":{"line":63,"column":22},"source":"../node_modules/micromark-util-character/index.js","original":{"line":60,"column":29}},{"name":"regexCheck","generated":{"line":63,"column":25},"source":"../node_modules/micromark-util-character/index.js","original":{"line":60,"column":32}},{"generated":{"line":63,"column":35},"source":"../node_modules/micromark-util-character/index.js","original":{"line":60,"column":42}},{"generated":{"line":63,"column":36},"source":"../node_modules/micromark-util-character/index.js","original":{"line":60,"column":43}},{"generated":{"line":63,"column":52},"source":"../node_modules/micromark-util-character/index.js","original":{"line":60,"column":42}},{"generated":{"line":63,"column":53},"source":"../node_modules/micromark-util-character/index.js","original":{"line":60,"column":7}},{"generated":{"line":64,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":61,"column":0}},{"generated":{"line":82,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":78,"column":7}},{"name":"asciiAtext","generated":{"line":82,"column":6},"source":"../node_modules/micromark-util-character/index.js","original":{"line":78,"column":13}},{"generated":{"line":82,"column":16},"source":"../node_modules/micromark-util-character/index.js","original":{"line":78,"column":23}},{"name":"regexCheck","generated":{"line":82,"column":19},"source":"../node_modules/micromark-util-character/index.js","original":{"line":78,"column":26}},{"generated":{"line":82,"column":29},"source":"../node_modules/micromark-util-character/index.js","original":{"line":78,"column":36}},{"generated":{"line":82,"column":30},"source":"../node_modules/micromark-util-character/index.js","original":{"line":78,"column":37}},{"generated":{"line":82,"column":51},"source":"../node_modules/micromark-util-character/index.js","original":{"line":78,"column":36}},{"generated":{"line":82,"column":52},"source":"../node_modules/micromark-util-character/index.js","original":{"line":78,"column":7}},{"generated":{"line":83,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":79,"column":0}},{"generated":{"line":95,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":89,"column":7}},{"name":"asciiControl","generated":{"line":95,"column":9},"source":"../node_modules/micromark-util-character/index.js","original":{"line":89,"column":16}},{"generated":{"line":95,"column":21},"source":"../node_modules/micromark-util-character/index.js","original":{"line":89,"column":7}},{"name":"code","generated":{"line":95,"column":22},"source":"../node_modules/micromark-util-character/index.js","original":{"line":89,"column":29}},{"generated":{"line":95,"column":26},"source":"../node_modules/micromark-util-character/index.js","original":{"line":89,"column":7}},{"generated":{"line":95,"column":28},"source":"../node_modules/micromark-util-character/index.js","original":{"line":89,"column":35}},{"generated":{"line":96,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":90,"column":2}},{"generated":{"line":96,"column":9},"source":"../node_modules/micromark-util-character/index.js","original":{"line":91,"column":4}},{"generated":{"line":97,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":92,"column":4}},{"name":"code","generated":{"line":98,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":93,"column":4}},{"name":"code","generated":{"line":98,"column":4},"source":"../node_modules/micromark-util-character/index.js","original":{"line":93,"column":4}},{"generated":{"line":98,"column":8},"source":"../node_modules/micromark-util-character/index.js","original":{"line":93,"column":8}},{"generated":{"line":98,"column":13},"source":"../node_modules/micromark-util-character/index.js","original":{"line":93,"column":13}},{"generated":{"line":98,"column":17},"source":"../node_modules/micromark-util-character/index.js","original":{"line":93,"column":4}},{"name":"code","generated":{"line":98,"column":22},"source":"../node_modules/micromark-util-character/index.js","original":{"line":93,"column":22}},{"generated":{"line":98,"column":26},"source":"../node_modules/micromark-util-character/index.js","original":{"line":93,"column":26}},{"generated":{"line":98,"column":29},"source":"../node_modules/micromark-util-character/index.js","original":{"line":93,"column":29}},{"generated":{"line":98,"column":31},"source":"../node_modules/micromark-util-character/index.js","original":{"line":93,"column":22}},{"name":"code","generated":{"line":98,"column":35},"source":"../node_modules/micromark-util-character/index.js","original":{"line":93,"column":35}},{"generated":{"line":98,"column":39},"source":"../node_modules/micromark-util-character/index.js","original":{"line":93,"column":39}},{"generated":{"line":98,"column":44},"source":"../node_modules/micromark-util-character/index.js","original":{"line":93,"column":44}},{"generated":{"line":98,"column":47},"source":"../node_modules/micromark-util-character/index.js","original":{"line":93,"column":4}},{"generated":{"line":99,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":90,"column":2}},{"generated":{"line":100,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":95,"column":1}},{"generated":{"line":101,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":96,"column":0}},{"generated":{"line":110,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":104,"column":7}},{"name":"markdownLineEndingOrSpace","generated":{"line":110,"column":9},"source":"../node_modules/micromark-util-character/index.js","original":{"line":104,"column":16}},{"generated":{"line":110,"column":34},"source":"../node_modules/micromark-util-character/index.js","original":{"line":104,"column":7}},{"name":"code","generated":{"line":110,"column":35},"source":"../node_modules/micromark-util-character/index.js","original":{"line":104,"column":42}},{"generated":{"line":110,"column":39},"source":"../node_modules/micromark-util-character/index.js","original":{"line":104,"column":7}},{"generated":{"line":110,"column":41},"source":"../node_modules/micromark-util-character/index.js","original":{"line":104,"column":48}},{"generated":{"line":111,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":105,"column":2}},{"name":"code","generated":{"line":111,"column":9},"source":"../node_modules/micromark-util-character/index.js","original":{"line":105,"column":9}},{"generated":{"line":111,"column":13},"source":"../node_modules/micromark-util-character/index.js","original":{"line":105,"column":13}},{"generated":{"line":111,"column":18},"source":"../node_modules/micromark-util-character/index.js","original":{"line":105,"column":18}},{"generated":{"line":111,"column":22},"source":"../node_modules/micromark-util-character/index.js","original":{"line":105,"column":9}},{"name":"code","generated":{"line":111,"column":27},"source":"../node_modules/micromark-util-character/index.js","original":{"line":105,"column":27}},{"generated":{"line":111,"column":31},"source":"../node_modules/micromark-util-character/index.js","original":{"line":105,"column":31}},{"generated":{"line":111,"column":34},"source":"../node_modules/micromark-util-character/index.js","original":{"line":105,"column":34}},{"generated":{"line":111,"column":35},"source":"../node_modules/micromark-util-character/index.js","original":{"line":105,"column":27}},{"name":"code","generated":{"line":111,"column":39},"source":"../node_modules/micromark-util-character/index.js","original":{"line":105,"column":39}},{"generated":{"line":111,"column":43},"source":"../node_modules/micromark-util-character/index.js","original":{"line":105,"column":43}},{"generated":{"line":111,"column":48},"source":"../node_modules/micromark-util-character/index.js","original":{"line":105,"column":48}},{"generated":{"line":111,"column":50},"source":"../node_modules/micromark-util-character/index.js","original":{"line":105,"column":9}},{"generated":{"line":111,"column":51},"source":"../node_modules/micromark-util-character/index.js","original":{"line":105,"column":2}},{"generated":{"line":112,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":106,"column":1}},{"generated":{"line":113,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":107,"column":0}},{"generated":{"line":128,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":121,"column":7}},{"name":"markdownLineEnding","generated":{"line":128,"column":9},"source":"../node_modules/micromark-util-character/index.js","original":{"line":121,"column":16}},{"generated":{"line":128,"column":27},"source":"../node_modules/micromark-util-character/index.js","original":{"line":121,"column":7}},{"name":"code","generated":{"line":128,"column":28},"source":"../node_modules/micromark-util-character/index.js","original":{"line":121,"column":35}},{"generated":{"line":128,"column":32},"source":"../node_modules/micromark-util-character/index.js","original":{"line":121,"column":7}},{"generated":{"line":128,"column":34},"source":"../node_modules/micromark-util-character/index.js","original":{"line":121,"column":41}},{"generated":{"line":129,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":122,"column":2}},{"name":"code","generated":{"line":129,"column":9},"source":"../node_modules/micromark-util-character/index.js","original":{"line":122,"column":9}},{"generated":{"line":129,"column":13},"source":"../node_modules/micromark-util-character/index.js","original":{"line":122,"column":13}},{"generated":{"line":129,"column":18},"source":"../node_modules/micromark-util-character/index.js","original":{"line":122,"column":18}},{"generated":{"line":129,"column":22},"source":"../node_modules/micromark-util-character/index.js","original":{"line":122,"column":9}},{"name":"code","generated":{"line":129,"column":26},"source":"../node_modules/micromark-util-character/index.js","original":{"line":122,"column":26}},{"generated":{"line":129,"column":30},"source":"../node_modules/micromark-util-character/index.js","original":{"line":122,"column":30}},{"generated":{"line":129,"column":33},"source":"../node_modules/micromark-util-character/index.js","original":{"line":122,"column":33}},{"generated":{"line":129,"column":34},"source":"../node_modules/micromark-util-character/index.js","original":{"line":122,"column":34}},{"generated":{"line":129,"column":35},"source":"../node_modules/micromark-util-character/index.js","original":{"line":122,"column":2}},{"generated":{"line":130,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":123,"column":1}},{"generated":{"line":131,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":124,"column":0}},{"generated":{"line":146,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":138,"column":7}},{"name":"markdownSpace","generated":{"line":146,"column":9},"source":"../node_modules/micromark-util-character/index.js","original":{"line":138,"column":16}},{"generated":{"line":146,"column":22},"source":"../node_modules/micromark-util-character/index.js","original":{"line":138,"column":7}},{"name":"code","generated":{"line":146,"column":23},"source":"../node_modules/micromark-util-character/index.js","original":{"line":138,"column":30}},{"generated":{"line":146,"column":27},"source":"../node_modules/micromark-util-character/index.js","original":{"line":138,"column":7}},{"generated":{"line":146,"column":29},"source":"../node_modules/micromark-util-character/index.js","original":{"line":138,"column":36}},{"generated":{"line":147,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":139,"column":2}},{"name":"code","generated":{"line":147,"column":9},"source":"../node_modules/micromark-util-character/index.js","original":{"line":139,"column":9}},{"generated":{"line":147,"column":13},"source":"../node_modules/micromark-util-character/index.js","original":{"line":139,"column":13}},{"generated":{"line":147,"column":18},"source":"../node_modules/micromark-util-character/index.js","original":{"line":139,"column":18}},{"generated":{"line":147,"column":19},"source":"../node_modules/micromark-util-character/index.js","original":{"line":139,"column":19}},{"generated":{"line":147,"column":20},"source":"../node_modules/micromark-util-character/index.js","original":{"line":139,"column":9}},{"name":"code","generated":{"line":147,"column":24},"source":"../node_modules/micromark-util-character/index.js","original":{"line":139,"column":24}},{"generated":{"line":147,"column":28},"source":"../node_modules/micromark-util-character/index.js","original":{"line":139,"column":28}},{"generated":{"line":147,"column":33},"source":"../node_modules/micromark-util-character/index.js","original":{"line":139,"column":33}},{"generated":{"line":147,"column":34},"source":"../node_modules/micromark-util-character/index.js","original":{"line":139,"column":34}},{"generated":{"line":147,"column":35},"source":"../node_modules/micromark-util-character/index.js","original":{"line":139,"column":9}},{"name":"code","generated":{"line":147,"column":39},"source":"../node_modules/micromark-util-character/index.js","original":{"line":139,"column":39}},{"generated":{"line":147,"column":43},"source":"../node_modules/micromark-util-character/index.js","original":{"line":139,"column":43}},{"generated":{"line":147,"column":48},"source":"../node_modules/micromark-util-character/index.js","original":{"line":139,"column":48}},{"generated":{"line":147,"column":50},"source":"../node_modules/micromark-util-character/index.js","original":{"line":139,"column":2}},{"generated":{"line":148,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":140,"column":1}},{"generated":{"line":149,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":141,"column":0}},{"generated":{"line":166,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":157,"column":7}},{"name":"unicodeWhitespace","generated":{"line":166,"column":6},"source":"../node_modules/micromark-util-character/index.js","original":{"line":157,"column":13}},{"generated":{"line":166,"column":23},"source":"../node_modules/micromark-util-character/index.js","original":{"line":157,"column":30}},{"name":"regexCheck","generated":{"line":166,"column":26},"source":"../node_modules/micromark-util-character/index.js","original":{"line":157,"column":33}},{"generated":{"line":166,"column":36},"source":"../node_modules/micromark-util-character/index.js","original":{"line":157,"column":43}},{"generated":{"line":166,"column":37},"source":"../node_modules/micromark-util-character/index.js","original":{"line":157,"column":44}},{"generated":{"line":166,"column":41},"source":"../node_modules/micromark-util-character/index.js","original":{"line":157,"column":43}},{"generated":{"line":166,"column":42},"source":"../node_modules/micromark-util-character/index.js","original":{"line":157,"column":7}},{"generated":{"line":167,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":158,"column":0}},{"generated":{"line":181,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":172,"column":0}},{"generated":{"line":182,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":173,"column":0}},{"generated":{"line":185,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":175,"column":7}},{"name":"unicodePunctuation","generated":{"line":185,"column":6},"source":"../node_modules/micromark-util-character/index.js","original":{"line":175,"column":13}},{"generated":{"line":185,"column":24},"source":"../node_modules/micromark-util-character/index.js","original":{"line":175,"column":31}},{"name":"regexCheck","generated":{"line":185,"column":27},"source":"../node_modules/micromark-util-character/index.js","original":{"line":175,"column":34}},{"generated":{"line":185,"column":37},"source":"../node_modules/micromark-util-character/index.js","original":{"line":175,"column":44}},{"name":"unicodePunctuationRegex","generated":{"line":185,"column":38},"source":"../node_modules/micromark-util-character/index.js","original":{"line":175,"column":45}},{"generated":{"line":185,"column":86},"source":"../node_modules/micromark-util-character/index.js","original":{"line":175,"column":44}},{"generated":{"line":185,"column":87},"source":"../node_modules/micromark-util-character/index.js","original":{"line":175,"column":7}},{"generated":{"line":186,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":176,"column":0}},{"generated":{"line":195,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":183,"column":0}},{"name":"regexCheck","generated":{"line":195,"column":9},"source":"../node_modules/micromark-util-character/index.js","original":{"line":183,"column":9}},{"generated":{"line":195,"column":19},"source":"../node_modules/micromark-util-character/index.js","original":{"line":183,"column":0}},{"name":"regex","generated":{"line":195,"column":20},"source":"../node_modules/micromark-util-character/index.js","original":{"line":183,"column":20}},{"generated":{"line":195,"column":25},"source":"../node_modules/micromark-util-character/index.js","original":{"line":183,"column":0}},{"generated":{"line":195,"column":27},"source":"../node_modules/micromark-util-character/index.js","original":{"line":183,"column":27}},{"generated":{"line":196,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":184,"column":2}},{"name":"check","generated":{"line":196,"column":9},"source":"../node_modules/micromark-util-character/index.js","original":{"line":184,"column":9}},{"generated":{"line":196,"column":14},"source":"../node_modules/micromark-util-character/index.js","original":{"line":184,"column":2}},{"generated":{"line":197,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":185,"column":2}},{"generated":{"line":204,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":192,"column":2}},{"name":"check","generated":{"line":204,"column":11},"source":"../node_modules/micromark-util-character/index.js","original":{"line":192,"column":11}},{"generated":{"line":204,"column":16},"source":"../node_modules/micromark-util-character/index.js","original":{"line":192,"column":2}},{"name":"code","generated":{"line":204,"column":17},"source":"../node_modules/micromark-util-character/index.js","original":{"line":192,"column":17}},{"generated":{"line":204,"column":21},"source":"../node_modules/micromark-util-character/index.js","original":{"line":192,"column":2}},{"generated":{"line":204,"column":23},"source":"../node_modules/micromark-util-character/index.js","original":{"line":192,"column":23}},{"generated":{"line":205,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":193,"column":4}},{"name":"code","generated":{"line":205,"column":11},"source":"../node_modules/micromark-util-character/index.js","original":{"line":193,"column":11}},{"generated":{"line":205,"column":15},"source":"../node_modules/micromark-util-character/index.js","original":{"line":193,"column":15}},{"generated":{"line":205,"column":20},"source":"../node_modules/micromark-util-character/index.js","original":{"line":193,"column":20}},{"generated":{"line":205,"column":24},"source":"../node_modules/micromark-util-character/index.js","original":{"line":193,"column":11}},{"name":"regex","generated":{"line":205,"column":28},"source":"../node_modules/micromark-util-character/index.js","original":{"line":193,"column":28}},{"generated":{"line":205,"column":33},"source":"../node_modules/micromark-util-character/index.js","original":{"line":193,"column":33}},{"name":"test","generated":{"line":205,"column":34},"source":"../node_modules/micromark-util-character/index.js","original":{"line":193,"column":34}},{"generated":{"line":205,"column":38},"source":"../node_modules/micromark-util-character/index.js","original":{"line":193,"column":28}},{"name":"String","generated":{"line":205,"column":39},"source":"../node_modules/micromark-util-character/index.js","original":{"line":193,"column":39}},{"generated":{"line":205,"column":45},"source":"../node_modules/micromark-util-character/index.js","original":{"line":193,"column":45}},{"name":"fromCharCode","generated":{"line":205,"column":46},"source":"../node_modules/micromark-util-character/index.js","original":{"line":193,"column":46}},{"generated":{"line":205,"column":58},"source":"../node_modules/micromark-util-character/index.js","original":{"line":193,"column":39}},{"name":"code","generated":{"line":205,"column":59},"source":"../node_modules/micromark-util-character/index.js","original":{"line":193,"column":59}},{"generated":{"line":205,"column":63},"source":"../node_modules/micromark-util-character/index.js","original":{"line":193,"column":39}},{"generated":{"line":205,"column":64},"source":"../node_modules/micromark-util-character/index.js","original":{"line":193,"column":28}},{"generated":{"line":205,"column":65},"source":"../node_modules/micromark-util-character/index.js","original":{"line":193,"column":4}},{"generated":{"line":206,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":194,"column":3}},{"generated":{"line":207,"column":0},"source":"../node_modules/micromark-util-character/index.js","original":{"line":195,"column":1}}],"sources":{"../node_modules/micromark-util-character/index.js":"/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"a7a57f91a07fb6aca28ac9c334d7515a","cacheData":{"env":{}}}