{"id":"Bt3f","dependencies":[{"name":"/Users/steve/Documents/Projects/notedly_app/web/package.json","includedInParent":true,"mtime":1634550415413},{"name":"/Users/steve/Documents/Projects/notedly_app/web/.babelrc","includedInParent":true,"mtime":1634038347786},{"name":"/Users/steve/Documents/Projects/notedly_app/web/node_modules/remark-rehype/package.json","includedInParent":true,"mtime":1634309499310},{"name":"mdast-util-to-hast","loc":{"line":11,"column":21},"parent":"/Users/steve/Documents/Projects/notedly_app/web/node_modules/remark-rehype/index.js","resolved":"/Users/steve/Documents/Projects/notedly_app/web/node_modules/mdast-util-to-hast/index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=void 0;var t=require(\"mdast-util-to-hast\");const e=function(t,e){return t&&\"run\"in t?u(t,e):n(t)};var r=e;function u(e,r){return(u,n,o)=>{e.run((0,t.toHast)(u,r),n,t=>{o(t)})}}function n(e){return r=>(0,t.toHast)(r,e)}exports.default=r;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/remark-rehype/index.js","original":{"line":63,"column":1},"generated":{"line":1,"column":0}},{"source":"../node_modules/remark-rehype/index.js","original":{"line":63,"column":1},"generated":{"line":1,"column":13}},{"source":"../node_modules/remark-rehype/index.js","original":{"line":63,"column":1},"generated":{"line":1,"column":20}},{"source":"../node_modules/remark-rehype/index.js","original":{"line":63,"column":1},"generated":{"line":1,"column":35}},{"source":"../node_modules/remark-rehype/index.js","original":{"line":63,"column":1},"generated":{"line":1,"column":43}},{"source":"../node_modules/remark-rehype/index.js","original":{"line":63,"column":1},"generated":{"line":1,"column":56}},{"source":"../node_modules/remark-rehype/index.js","original":{"line":63,"column":1},"generated":{"line":1,"column":57}},{"source":"../node_modules/remark-rehype/index.js","original":{"line":63,"column":1},"generated":{"line":1,"column":64}},{"source":"../node_modules/remark-rehype/index.js","original":{"line":63,"column":1},"generated":{"line":1,"column":68}},{"source":"../node_modules/remark-rehype/index.js","original":{"line":63,"column":1},"generated":{"line":1,"column":76}},{"source":"../node_modules/remark-rehype/index.js","original":{"line":63,"column":1},"generated":{"line":1,"column":89}},{"source":"../node_modules/remark-rehype/index.js","original":{"line":11,"column":0},"generated":{"line":1,"column":91}},{"source":"../node_modules/remark-rehype/index.js","original":{"line":11,"column":0},"generated":{"line":1,"column":95}},{"source":"../node_modules/remark-rehype/index.js","original":{"line":11,"column":0},"generated":{"line":1,"column":97}},{"source":"../node_modules/remark-rehype/index.js","original":{"line":11,"column":0},"generated":{"line":1,"column":105}},{"source":"../node_modules/remark-rehype/index.js","original":{"line":28,"column":0},"generated":{"line":1,"column":127}},{"source":"../node_modules/remark-rehype/index.js","name":"remarkRehype","original":{"line":28,"column":6},"generated":{"line":1,"column":133}},{"source":"../node_modules/remark-rehype/index.js","original":{"line":31,"column":4},"generated":{"line":1,"column":135}},{"source":"../node_modules/remark-rehype/index.js","name":"destination","original":{"line":31,"column":14},"generated":{"line":1,"column":144}},{"source":"../node_modules/remark-rehype/index.js","name":"options","original":{"line":31,"column":27},"generated":{"line":1,"column":146}},{"source":"../node_modules/remark-rehype/index.js","name":"destination","original":{"line":32,"column":13},"generated":{"line":1,"column":149}},{"source":"../node_modules/remark-rehype/index.js","name":"destination","original":{"line":32,"column":13},"generated":{"line":1,"column":156}},{"source":"../node_modules/remark-rehype/index.js","original":{"line":32,"column":28},"generated":{"line":1,"column":159}},{"source":"../node_modules/remark-rehype/index.js","name":"destination","original":{"line":32,"column":37},"generated":{"line":1,"column":167}},{"source":"../node_modules/remark-rehype/index.js","name":"bridge","original":{"line":33,"column":10},"generated":{"line":1,"column":169}},{"source":"../node_modules/remark-rehype/index.js","name":"destination","original":{"line":33,"column":17},"generated":{"line":1,"column":171}},{"source":"../node_modules/remark-rehype/index.js","name":"options","original":{"line":33,"column":30},"generated":{"line":1,"column":173}},{"source":"../node_modules/remark-rehype/index.js","name":"mutate","original":{"line":34,"column":10},"generated":{"line":1,"column":176}},{"source":"../node_modules/remark-rehype/index.js","name":"destination","original":{"line":34,"column":17},"generated":{"line":1,"column":178}},{"source":"../node_modules/remark-rehype/index.js","name":"remarkRehype","original":{"line":38,"column":15},"generated":{"line":1,"column":182}},{"source":"../node_modules/remark-rehype/index.js","name":"remarkRehype","original":{"line":38,"column":15},"generated":{"line":1,"column":186}},{"source":"../node_modules/remark-rehype/index.js","name":"remarkRehype","original":{"line":38,"column":15},"generated":{"line":1,"column":188}},{"source":"../node_modules/remark-rehype/index.js","original":{"line":46,"column":0},"generated":{"line":1,"column":190}},{"source":"../node_modules/remark-rehype/index.js","name":"bridge","original":{"line":46,"column":9},"generated":{"line":1,"column":199}},{"source":"../node_modules/remark-rehype/index.js","name":"destination","original":{"line":46,"column":16},"generated":{"line":1,"column":201}},{"source":"../node_modules/remark-rehype/index.js","name":"options","original":{"line":46,"column":29},"generated":{"line":1,"column":203}},{"source":"../node_modules/remark-rehype/index.js","original":{"line":47,"column":9},"generated":{"line":1,"column":206}},{"source":"../node_modules/remark-rehype/index.js","original":{"line":47,"column":9},"generated":{"line":1,"column":212}},{"source":"../node_modules/remark-rehype/index.js","name":"node","original":{"line":47,"column":10},"generated":{"line":1,"column":213}},{"source":"../node_modules/remark-rehype/index.js","name":"file","original":{"line":47,"column":16},"generated":{"line":1,"column":215}},{"source":"../node_modules/remark-rehype/index.js","name":"next","original":{"line":47,"column":22},"generated":{"line":1,"column":217}},{"source":"../node_modules/remark-rehype/index.js","name":"destination","original":{"line":48,"column":4},"generated":{"line":1,"column":222}},{"source":"../node_modules/remark-rehype/index.js","name":"run","original":{"line":48,"column":16},"generated":{"line":1,"column":224}},{"source":"../node_modules/remark-rehype/index.js","original":{"line":48,"column":20},"generated":{"line":1,"column":229}},{"source":"../node_modules/remark-rehype/index.js","name":"node","original":{"line":48,"column":27},"generated":{"line":1,"column":231}},{"source":"../node_modules/remark-rehype/index.js","name":"node","original":{"line":48,"column":27},"generated":{"line":1,"column":233}},{"source":"../node_modules/remark-rehype/index.js","name":"node","original":{"line":48,"column":27},"generated":{"line":1,"column":241}},{"source":"../node_modules/remark-rehype/index.js","name":"options","original":{"line":48,"column":33},"generated":{"line":1,"column":243}},{"source":"../node_modules/remark-rehype/index.js","name":"file","original":{"line":48,"column":43},"generated":{"line":1,"column":246}},{"source":"../node_modules/remark-rehype/index.js","name":"error","original":{"line":48,"column":50},"generated":{"line":1,"column":248}},{"source":"../node_modules/remark-rehype/index.js","name":"next","original":{"line":49,"column":6},"generated":{"line":1,"column":252}},{"source":"../node_modules/remark-rehype/index.js","name":"error","original":{"line":49,"column":11},"generated":{"line":1,"column":254}},{"source":"../node_modules/remark-rehype/index.js","original":{"line":60,"column":0},"generated":{"line":1,"column":260}},{"source":"../node_modules/remark-rehype/index.js","name":"mutate","original":{"line":60,"column":9},"generated":{"line":1,"column":269}},{"source":"../node_modules/remark-rehype/index.js","name":"options","original":{"line":60,"column":16},"generated":{"line":1,"column":271}},{"source":"../node_modules/remark-rehype/index.js","name":"node","original":{"line":62,"column":10},"generated":{"line":1,"column":274}},{"source":"../node_modules/remark-rehype/index.js","name":"node","original":{"line":62,"column":10},"generated":{"line":1,"column":281}},{"source":"../node_modules/remark-rehype/index.js","original":{"line":62,"column":19},"generated":{"line":1,"column":285}},{"source":"../node_modules/remark-rehype/index.js","name":"node","original":{"line":62,"column":26},"generated":{"line":1,"column":287}},{"source":"../node_modules/remark-rehype/index.js","name":"node","original":{"line":62,"column":26},"generated":{"line":1,"column":289}},{"source":"../node_modules/remark-rehype/index.js","name":"node","original":{"line":62,"column":26},"generated":{"line":1,"column":297}},{"source":"../node_modules/remark-rehype/index.js","name":"options","original":{"line":62,"column":32},"generated":{"line":1,"column":299}},{"source":"../node_modules/remark-rehype/index.js","original":{"line":63,"column":1},"generated":{"line":1,"column":302}},{"source":"../node_modules/remark-rehype/index.js","original":{"line":63,"column":1},"generated":{"line":1,"column":310}},{"source":"../node_modules/remark-rehype/index.js","original":{"line":63,"column":1},"generated":{"line":1,"column":318}}],"sources":{"../node_modules/remark-rehype/index.js":"/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin to bridge or mutate to rehype.\n *\n * If a destination is given, runs the destination with the new hast tree\n * (bridge-mode).\n * Without destination, returns the hast tree: further plugins run on that tree\n * (mutate-mode).\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further transformers run on the nlcst tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned for `toHast`.\n  return (node) => toHast(node, options)\n}\n"},"lineCount":null}},"error":null,"hash":"a6695b74fa3c48e7d6af942abcfe4543","cacheData":{"env":{}}}