{"id":"gql/query.js","dependencies":[{"name":"/Users/steve/Documents/Projects/notedly_app/web/.babelrc","includedInParent":true,"mtime":1634038347786},{"name":"/Users/steve/Documents/Projects/notedly_app/web/package.json","includedInParent":true,"mtime":1634558757028},{"name":"@apollo/client","loc":{"line":1,"column":20},"parent":"/Users/steve/Documents/Projects/notedly_app/web/src/gql/query.js","resolved":"/Users/steve/Documents/Projects/notedly_app/web/node_modules/@apollo/client/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IS_LOGGED_IN = exports.GET_NOTES = exports.GET_NOTE = exports.GET_MY_NOTES = exports.GET_MY_FAVORITES = exports.GET_ME = void 0;\n\nvar _client = require(\"@apollo/client\");\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6;\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar GET_NOTES = (0, _client.gql)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query noteFeed($cursor: String) {\\n    noteFeed(cursor: $cursor) {\\n      cursor\\n      hasNextPage\\n      notes {\\n        id\\n        createdAt\\n        content\\n        favoriteCount\\n        author {\\n          username\\n          id\\n          avatar\\n        }\\n      }\\n    }\\n  }\\n\"])));\nexports.GET_NOTES = GET_NOTES;\nvar GET_NOTE = (0, _client.gql)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  query note($id: ID!) {\\n    note(id: $id) {\\n      id\\n      createdAt\\n      content\\n      favoriteCount\\n      author {\\n        username\\n        id\\n        avatar\\n      }\\n    }\\n  }\\n\"])));\nexports.GET_NOTE = GET_NOTE;\nvar IS_LOGGED_IN = (0, _client.gql)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  {\\n    isLoggedIn @client\\n  }\\n\"])));\nexports.IS_LOGGED_IN = IS_LOGGED_IN;\nvar GET_MY_NOTES = (0, _client.gql)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  query me {\\n    me {\\n      id\\n      username\\n      notes {\\n        id\\n        createdAt\\n        content\\n        favoriteCount\\n        author {\\n          username\\n          id\\n          avatar\\n        }\\n      }\\n    }\\n  }\\n\"])));\nexports.GET_MY_NOTES = GET_MY_NOTES;\nvar GET_MY_FAVORITES = (0, _client.gql)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n  query me {\\n    me {\\n      id\\n      username\\n      favorites {\\n        id\\n        createdAt\\n        content\\n        favoriteCount\\n        author {\\n          username\\n          id\\n          avatar\\n        }\\n      }\\n    }\\n  }\\n\"])));\nexports.GET_MY_FAVORITES = GET_MY_FAVORITES;\nvar GET_ME = (0, _client.gql)(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n  query me {\\n    me {\\n      id\\n      favorites {\\n        id\\n      }\\n    }\\n  }\\n\"])));\nexports.GET_ME = GET_ME;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"gql/query.js","original":{"line":1,"column":0}},{"generated":{"line":14,"column":0},"source":"gql/query.js","original":{"line":3,"column":7}},{"name":"GET_NOTES","generated":{"line":14,"column":4},"source":"gql/query.js","original":{"line":3,"column":13}},{"generated":{"line":14,"column":13},"source":"gql/query.js","original":{"line":3,"column":22}},{"name":"gql","generated":{"line":14,"column":20},"source":"gql/query.js","original":{"line":3,"column":25}},{"generated":{"line":14,"column":31},"source":"gql/query.js","original":{"line":3,"column":22}},{"generated":{"line":14,"column":394},"source":"gql/query.js","original":{"line":3,"column":7}},{"generated":{"line":16,"column":0},"source":"gql/query.js","original":{"line":23,"column":7}},{"name":"GET_NOTE","generated":{"line":16,"column":4},"source":"gql/query.js","original":{"line":23,"column":13}},{"generated":{"line":16,"column":12},"source":"gql/query.js","original":{"line":23,"column":21}},{"name":"gql","generated":{"line":16,"column":19},"source":"gql/query.js","original":{"line":23,"column":24}},{"generated":{"line":16,"column":30},"source":"gql/query.js","original":{"line":23,"column":21}},{"generated":{"line":16,"column":297},"source":"gql/query.js","original":{"line":23,"column":7}},{"generated":{"line":18,"column":0},"source":"gql/query.js","original":{"line":39,"column":7}},{"name":"IS_LOGGED_IN","generated":{"line":18,"column":4},"source":"gql/query.js","original":{"line":39,"column":13}},{"generated":{"line":18,"column":16},"source":"gql/query.js","original":{"line":39,"column":25}},{"name":"gql","generated":{"line":18,"column":23},"source":"gql/query.js","original":{"line":39,"column":28}},{"generated":{"line":18,"column":34},"source":"gql/query.js","original":{"line":39,"column":25}},{"generated":{"line":18,"column":142},"source":"gql/query.js","original":{"line":39,"column":7}},{"generated":{"line":20,"column":0},"source":"gql/query.js","original":{"line":45,"column":7}},{"name":"GET_MY_NOTES","generated":{"line":20,"column":4},"source":"gql/query.js","original":{"line":45,"column":13}},{"generated":{"line":20,"column":16},"source":"gql/query.js","original":{"line":45,"column":25}},{"name":"gql","generated":{"line":20,"column":23},"source":"gql/query.js","original":{"line":45,"column":28}},{"generated":{"line":20,"column":34},"source":"gql/query.js","original":{"line":45,"column":25}},{"generated":{"line":20,"column":346},"source":"gql/query.js","original":{"line":45,"column":7}},{"generated":{"line":22,"column":0},"source":"gql/query.js","original":{"line":65,"column":7}},{"name":"GET_MY_FAVORITES","generated":{"line":22,"column":4},"source":"gql/query.js","original":{"line":65,"column":13}},{"generated":{"line":22,"column":20},"source":"gql/query.js","original":{"line":65,"column":29}},{"name":"gql","generated":{"line":22,"column":27},"source":"gql/query.js","original":{"line":65,"column":32}},{"generated":{"line":22,"column":38},"source":"gql/query.js","original":{"line":65,"column":29}},{"generated":{"line":22,"column":354},"source":"gql/query.js","original":{"line":65,"column":7}},{"generated":{"line":24,"column":0},"source":"gql/query.js","original":{"line":85,"column":7}},{"name":"GET_ME","generated":{"line":24,"column":4},"source":"gql/query.js","original":{"line":85,"column":13}},{"generated":{"line":24,"column":10},"source":"gql/query.js","original":{"line":85,"column":19}},{"name":"gql","generated":{"line":24,"column":17},"source":"gql/query.js","original":{"line":85,"column":22}},{"generated":{"line":24,"column":28},"source":"gql/query.js","original":{"line":85,"column":19}},{"generated":{"line":24,"column":188},"source":"gql/query.js","original":{"line":85,"column":7}}],"sources":{"gql/query.js":"import { gql } from '@apollo/client';\n\nexport const GET_NOTES = gql`\n  query noteFeed($cursor: String) {\n    noteFeed(cursor: $cursor) {\n      cursor\n      hasNextPage\n      notes {\n        id\n        createdAt\n        content\n        favoriteCount\n        author {\n          username\n          id\n          avatar\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_NOTE = gql`\n  query note($id: ID!) {\n    note(id: $id) {\n      id\n      createdAt\n      content\n      favoriteCount\n      author {\n        username\n        id\n        avatar\n      }\n    }\n  }\n`;\n\nexport const IS_LOGGED_IN = gql`\n  {\n    isLoggedIn @client\n  }\n`;\n\nexport const GET_MY_NOTES = gql`\n  query me {\n    me {\n      id\n      username\n      notes {\n        id\n        createdAt\n        content\n        favoriteCount\n        author {\n          username\n          id\n          avatar\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_MY_FAVORITES = gql`\n  query me {\n    me {\n      id\n      username\n      favorites {\n        id\n        createdAt\n        content\n        favoriteCount\n        author {\n          username\n          id\n          avatar\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_ME = gql`\n  query me {\n    me {\n      id\n      favorites {\n        id\n      }\n    }\n  }\n`;\n"},"lineCount":null}},"error":null,"hash":"c3278f61df53091984278c430953f666","cacheData":{"env":{}}}