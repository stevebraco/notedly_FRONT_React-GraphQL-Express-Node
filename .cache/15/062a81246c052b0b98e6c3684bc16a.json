{"id":"xf6H","dependencies":[{"name":"/Users/steve/Documents/Projects/notedly_app/web/package.json","includedInParent":true,"mtime":1634550415413},{"name":"/Users/steve/Documents/Projects/notedly_app/web/.babelrc","includedInParent":true,"mtime":1634038347786},{"name":"/Users/steve/Documents/Projects/notedly_app/web/node_modules/unist-util-is/package.json","includedInParent":true,"mtime":1634309499462}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.is=exports.convert=void 0;const t=function t(r,e,o,i,u){const f=n(e);if(null!=o&&(\"number\"!=typeof o||o<0||o===Number.POSITIVE_INFINITY))throw new Error(\"Expected positive finite index\");if(!(null==i||t(i)&&i.children))throw new Error(\"Expected parent node\");if(null==i!=(null==o))throw new Error(\"Expected both parent and index\");return!(!r||!r.type||\"string\"!=typeof r.type)&&Boolean(f.call(u,r,o,i))};exports.is=t;const n=function(t){if(null==t)return u;if(\"string\"==typeof t)return o(t);if(\"object\"==typeof t)return Array.isArray(t)?r(t):e(t);if(\"function\"==typeof t)return i(t);throw new Error(\"Expected function, string, or object as test\")};function r(t){const r=[];let e=-1;for(;++e<t.length;)r[e]=n(t[e]);return i(function(...t){let n=-1;for(;++n<r.length;)if(r[n].call(this,...t))return!0;return!1})}function e(t){return i(function(n){let r;for(r in t)if(n[r]!==t[r])return!1;return!0})}function o(t){return i(function(n){return n&&n.type===t})}function i(t){return function(...n){return Boolean(t.call(this,...n))}}function u(){return!0}exports.convert=n;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/unist-util-is/index.js","original":{"line":251,"column":1},"generated":{"line":1,"column":0}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":251,"column":1},"generated":{"line":1,"column":13}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":251,"column":1},"generated":{"line":1,"column":20}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":251,"column":1},"generated":{"line":1,"column":35}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":251,"column":1},"generated":{"line":1,"column":43}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":251,"column":1},"generated":{"line":1,"column":56}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":251,"column":1},"generated":{"line":1,"column":57}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":251,"column":1},"generated":{"line":1,"column":64}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":251,"column":1},"generated":{"line":1,"column":68}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":251,"column":1},"generated":{"line":1,"column":76}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":251,"column":1},"generated":{"line":1,"column":79}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":251,"column":1},"generated":{"line":1,"column":87}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":251,"column":1},"generated":{"line":1,"column":100}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":51,"column":7},"generated":{"line":1,"column":102}},{"source":"../node_modules/unist-util-is/index.js","name":"is","original":{"line":51,"column":13},"generated":{"line":1,"column":108}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":79,"column":4},"generated":{"line":1,"column":110}},{"source":"../node_modules/unist-util-is/index.js","name":"is","original":{"line":79,"column":13},"generated":{"line":1,"column":119}},{"source":"../node_modules/unist-util-is/index.js","name":"node","original":{"line":79,"column":16},"generated":{"line":1,"column":121}},{"source":"../node_modules/unist-util-is/index.js","name":"test","original":{"line":79,"column":22},"generated":{"line":1,"column":123}},{"source":"../node_modules/unist-util-is/index.js","name":"index","original":{"line":79,"column":28},"generated":{"line":1,"column":125}},{"source":"../node_modules/unist-util-is/index.js","name":"parent","original":{"line":79,"column":35},"generated":{"line":1,"column":127}},{"source":"../node_modules/unist-util-is/index.js","name":"context","original":{"line":79,"column":43},"generated":{"line":1,"column":129}},{"source":"../node_modules/unist-util-is/index.js","name":"check","original":{"line":80,"column":12},"generated":{"line":1,"column":132}},{"source":"../node_modules/unist-util-is/index.js","name":"check","original":{"line":80,"column":12},"generated":{"line":1,"column":138}},{"source":"../node_modules/unist-util-is/index.js","name":"convert","original":{"line":80,"column":20},"generated":{"line":1,"column":140}},{"source":"../node_modules/unist-util-is/index.js","name":"test","original":{"line":80,"column":28},"generated":{"line":1,"column":142}},{"source":"../node_modules/unist-util-is/index.js","name":"index","original":{"line":83,"column":8},"generated":{"line":1,"column":145}},{"source":"../node_modules/unist-util-is/index.js","name":"index","original":{"line":83,"column":8},"generated":{"line":1,"column":148}},{"source":"../node_modules/unist-util-is/index.js","name":"index","original":{"line":83,"column":8},"generated":{"line":1,"column":154}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":85,"column":26},"generated":{"line":1,"column":158}},{"source":"../node_modules/unist-util-is/index.js","name":"index","original":{"line":85,"column":16},"generated":{"line":1,"column":175}},{"source":"../node_modules/unist-util-is/index.js","name":"index","original":{"line":86,"column":10},"generated":{"line":1,"column":178}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":86,"column":18},"generated":{"line":1,"column":180}},{"source":"../node_modules/unist-util-is/index.js","name":"index","original":{"line":87,"column":10},"generated":{"line":1,"column":183}},{"source":"../node_modules/unist-util-is/index.js","name":"Number","original":{"line":87,"column":20},"generated":{"line":1,"column":187}},{"source":"../node_modules/unist-util-is/index.js","name":"POSITIVE_INFINITY","original":{"line":87,"column":27},"generated":{"line":1,"column":194}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":89,"column":14},"generated":{"line":1,"column":213}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":89,"column":14},"generated":{"line":1,"column":219}},{"source":"../node_modules/unist-util-is/index.js","name":"Error","original":{"line":89,"column":18},"generated":{"line":1,"column":223}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":89,"column":24},"generated":{"line":1,"column":229}},{"source":"../node_modules/unist-util-is/index.js","name":"parent","original":{"line":93,"column":8},"generated":{"line":1,"column":263}},{"source":"../node_modules/unist-util-is/index.js","name":"parent","original":{"line":93,"column":8},"generated":{"line":1,"column":268}},{"source":"../node_modules/unist-util-is/index.js","name":"parent","original":{"line":93,"column":8},"generated":{"line":1,"column":274}},{"source":"../node_modules/unist-util-is/index.js","name":"is","original":{"line":95,"column":10},"generated":{"line":1,"column":277}},{"source":"../node_modules/unist-util-is/index.js","name":"parent","original":{"line":95,"column":13},"generated":{"line":1,"column":279}},{"source":"../node_modules/unist-util-is/index.js","name":"parent","original":{"line":95,"column":25},"generated":{"line":1,"column":283}},{"source":"../node_modules/unist-util-is/index.js","name":"children","original":{"line":95,"column":32},"generated":{"line":1,"column":285}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":97,"column":14},"generated":{"line":1,"column":295}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":97,"column":14},"generated":{"line":1,"column":301}},{"source":"../node_modules/unist-util-is/index.js","name":"Error","original":{"line":97,"column":18},"generated":{"line":1,"column":305}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":97,"column":24},"generated":{"line":1,"column":311}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":101,"column":8},"generated":{"line":1,"column":335}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":101,"column":8},"generated":{"line":1,"column":338}},{"source":"../node_modules/unist-util-is/index.js","name":"parent","original":{"line":101,"column":9},"generated":{"line":1,"column":344}},{"source":"../node_modules/unist-util-is/index.js","name":"index","original":{"line":102,"column":9},"generated":{"line":1,"column":348}},{"source":"../node_modules/unist-util-is/index.js","name":"index","original":{"line":102,"column":9},"generated":{"line":1,"column":354}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":104,"column":14},"generated":{"line":1,"column":357}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":104,"column":14},"generated":{"line":1,"column":363}},{"source":"../node_modules/unist-util-is/index.js","name":"Error","original":{"line":104,"column":18},"generated":{"line":1,"column":367}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":104,"column":24},"generated":{"line":1,"column":373}},{"source":"../node_modules/unist-util-is/index.js","name":"node","original":{"line":108,"column":13},"generated":{"line":1,"column":407}},{"source":"../node_modules/unist-util-is/index.js","name":"node","original":{"line":108,"column":13},"generated":{"line":1,"column":416}},{"source":"../node_modules/unist-util-is/index.js","name":"node","original":{"line":108,"column":21},"generated":{"line":1,"column":420}},{"source":"../node_modules/unist-util-is/index.js","name":"type","original":{"line":108,"column":26},"generated":{"line":1,"column":422}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":108,"column":55},"generated":{"line":1,"column":428}},{"source":"../node_modules/unist-util-is/index.js","name":"node","original":{"line":108,"column":41},"generated":{"line":1,"column":445}},{"source":"../node_modules/unist-util-is/index.js","name":"type","original":{"line":108,"column":46},"generated":{"line":1,"column":447}},{"source":"../node_modules/unist-util-is/index.js","name":"Boolean","original":{"line":109,"column":10},"generated":{"line":1,"column":454}},{"source":"../node_modules/unist-util-is/index.js","name":"check","original":{"line":109,"column":18},"generated":{"line":1,"column":462}},{"source":"../node_modules/unist-util-is/index.js","name":"call","original":{"line":109,"column":24},"generated":{"line":1,"column":464}},{"source":"../node_modules/unist-util-is/index.js","name":"context","original":{"line":109,"column":29},"generated":{"line":1,"column":469}},{"source":"../node_modules/unist-util-is/index.js","name":"node","original":{"line":109,"column":38},"generated":{"line":1,"column":471}},{"source":"../node_modules/unist-util-is/index.js","name":"index","original":{"line":109,"column":44},"generated":{"line":1,"column":473}},{"source":"../node_modules/unist-util-is/index.js","name":"parent","original":{"line":109,"column":51},"generated":{"line":1,"column":475}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":251,"column":1},"generated":{"line":1,"column":480}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":251,"column":1},"generated":{"line":1,"column":488}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":251,"column":1},"generated":{"line":1,"column":491}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":114,"column":7},"generated":{"line":1,"column":493}},{"source":"../node_modules/unist-util-is/index.js","name":"convert","original":{"line":114,"column":13},"generated":{"line":1,"column":499}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":132,"column":4},"generated":{"line":1,"column":501}},{"source":"../node_modules/unist-util-is/index.js","name":"test","original":{"line":132,"column":14},"generated":{"line":1,"column":510}},{"source":"../node_modules/unist-util-is/index.js","name":"test","original":{"line":133,"column":10},"generated":{"line":1,"column":513}},{"source":"../node_modules/unist-util-is/index.js","name":"test","original":{"line":133,"column":10},"generated":{"line":1,"column":516}},{"source":"../node_modules/unist-util-is/index.js","name":"test","original":{"line":133,"column":10},"generated":{"line":1,"column":522}},{"source":"../node_modules/unist-util-is/index.js","name":"ok","original":{"line":134,"column":15},"generated":{"line":1,"column":524}},{"source":"../node_modules/unist-util-is/index.js","name":"ok","original":{"line":134,"column":15},"generated":{"line":1,"column":531}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":137,"column":10},"generated":{"line":1,"column":533}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":137,"column":26},"generated":{"line":1,"column":536}},{"source":"../node_modules/unist-util-is/index.js","name":"test","original":{"line":137,"column":17},"generated":{"line":1,"column":553}},{"source":"../node_modules/unist-util-is/index.js","name":"typeFactory","original":{"line":138,"column":15},"generated":{"line":1,"column":555}},{"source":"../node_modules/unist-util-is/index.js","name":"typeFactory","original":{"line":138,"column":15},"generated":{"line":1,"column":562}},{"source":"../node_modules/unist-util-is/index.js","name":"test","original":{"line":138,"column":27},"generated":{"line":1,"column":564}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":141,"column":10},"generated":{"line":1,"column":567}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":141,"column":26},"generated":{"line":1,"column":570}},{"source":"../node_modules/unist-util-is/index.js","name":"test","original":{"line":141,"column":17},"generated":{"line":1,"column":587}},{"source":"../node_modules/unist-util-is/index.js","name":"Array","original":{"line":142,"column":15},"generated":{"line":1,"column":589}},{"source":"../node_modules/unist-util-is/index.js","name":"Array","original":{"line":142,"column":15},"generated":{"line":1,"column":596}},{"source":"../node_modules/unist-util-is/index.js","name":"isArray","original":{"line":142,"column":21},"generated":{"line":1,"column":602}},{"source":"../node_modules/unist-util-is/index.js","name":"test","original":{"line":142,"column":29},"generated":{"line":1,"column":610}},{"source":"../node_modules/unist-util-is/index.js","name":"anyFactory","original":{"line":142,"column":37},"generated":{"line":1,"column":613}},{"source":"../node_modules/unist-util-is/index.js","name":"test","original":{"line":142,"column":48},"generated":{"line":1,"column":615}},{"source":"../node_modules/unist-util-is/index.js","name":"propsFactory","original":{"line":142,"column":56},"generated":{"line":1,"column":618}},{"source":"../node_modules/unist-util-is/index.js","name":"test","original":{"line":142,"column":69},"generated":{"line":1,"column":620}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":145,"column":10},"generated":{"line":1,"column":623}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":145,"column":26},"generated":{"line":1,"column":626}},{"source":"../node_modules/unist-util-is/index.js","name":"test","original":{"line":145,"column":17},"generated":{"line":1,"column":645}},{"source":"../node_modules/unist-util-is/index.js","name":"castFactory","original":{"line":146,"column":15},"generated":{"line":1,"column":647}},{"source":"../node_modules/unist-util-is/index.js","name":"castFactory","original":{"line":146,"column":15},"generated":{"line":1,"column":654}},{"source":"../node_modules/unist-util-is/index.js","name":"test","original":{"line":146,"column":27},"generated":{"line":1,"column":656}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":149,"column":12},"generated":{"line":1,"column":659}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":149,"column":12},"generated":{"line":1,"column":665}},{"source":"../node_modules/unist-util-is/index.js","name":"Error","original":{"line":149,"column":16},"generated":{"line":1,"column":669}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":149,"column":22},"generated":{"line":1,"column":675}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":156,"column":0},"generated":{"line":1,"column":724}},{"source":"../node_modules/unist-util-is/index.js","name":"anyFactory","original":{"line":156,"column":9},"generated":{"line":1,"column":733}},{"source":"../node_modules/unist-util-is/index.js","name":"tests","original":{"line":156,"column":20},"generated":{"line":1,"column":735}},{"source":"../node_modules/unist-util-is/index.js","name":"checks","original":{"line":158,"column":8},"generated":{"line":1,"column":738}},{"source":"../node_modules/unist-util-is/index.js","name":"checks","original":{"line":158,"column":8},"generated":{"line":1,"column":744}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":158,"column":17},"generated":{"line":1,"column":746}},{"source":"../node_modules/unist-util-is/index.js","name":"index","original":{"line":159,"column":6},"generated":{"line":1,"column":749}},{"source":"../node_modules/unist-util-is/index.js","name":"index","original":{"line":159,"column":6},"generated":{"line":1,"column":753}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":159,"column":15},"generated":{"line":1,"column":756}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":161,"column":9},"generated":{"line":1,"column":758}},{"source":"../node_modules/unist-util-is/index.js","name":"index","original":{"line":161,"column":11},"generated":{"line":1,"column":765}},{"source":"../node_modules/unist-util-is/index.js","name":"tests","original":{"line":161,"column":19},"generated":{"line":1,"column":767}},{"source":"../node_modules/unist-util-is/index.js","name":"length","original":{"line":161,"column":25},"generated":{"line":1,"column":769}},{"source":"../node_modules/unist-util-is/index.js","name":"checks","original":{"line":162,"column":4},"generated":{"line":1,"column":777}},{"source":"../node_modules/unist-util-is/index.js","name":"index","original":{"line":162,"column":11},"generated":{"line":1,"column":779}},{"source":"../node_modules/unist-util-is/index.js","name":"convert","original":{"line":162,"column":20},"generated":{"line":1,"column":782}},{"source":"../node_modules/unist-util-is/index.js","name":"tests","original":{"line":162,"column":28},"generated":{"line":1,"column":784}},{"source":"../node_modules/unist-util-is/index.js","name":"index","original":{"line":162,"column":34},"generated":{"line":1,"column":786}},{"source":"../node_modules/unist-util-is/index.js","name":"castFactory","original":{"line":165,"column":9},"generated":{"line":1,"column":790}},{"source":"../node_modules/unist-util-is/index.js","name":"castFactory","original":{"line":165,"column":9},"generated":{"line":1,"column":797}},{"source":"../node_modules/unist-util-is/index.js","name":"any","original":{"line":172,"column":11},"generated":{"line":1,"column":799}},{"source":"../node_modules/unist-util-is/index.js","name":"parameters","original":{"line":172,"column":18},"generated":{"line":1,"column":811}},{"source":"../node_modules/unist-util-is/index.js","name":"index","original":{"line":173,"column":8},"generated":{"line":1,"column":814}},{"source":"../node_modules/unist-util-is/index.js","name":"index","original":{"line":173,"column":8},"generated":{"line":1,"column":818}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":173,"column":17},"generated":{"line":1,"column":821}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":175,"column":11},"generated":{"line":1,"column":823}},{"source":"../node_modules/unist-util-is/index.js","name":"index","original":{"line":175,"column":13},"generated":{"line":1,"column":830}},{"source":"../node_modules/unist-util-is/index.js","name":"checks","original":{"line":175,"column":21},"generated":{"line":1,"column":832}},{"source":"../node_modules/unist-util-is/index.js","name":"length","original":{"line":175,"column":28},"generated":{"line":1,"column":834}},{"source":"../node_modules/unist-util-is/index.js","name":"checks","original":{"line":176,"column":10},"generated":{"line":1,"column":842}},{"source":"../node_modules/unist-util-is/index.js","name":"checks","original":{"line":176,"column":10},"generated":{"line":1,"column":845}},{"source":"../node_modules/unist-util-is/index.js","name":"index","original":{"line":176,"column":17},"generated":{"line":1,"column":847}},{"source":"../node_modules/unist-util-is/index.js","name":"call","original":{"line":176,"column":24},"generated":{"line":1,"column":850}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":176,"column":29},"generated":{"line":1,"column":855}},{"source":"../node_modules/unist-util-is/index.js","name":"parameters","original":{"line":176,"column":38},"generated":{"line":1,"column":863}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":176,"column":51},"generated":{"line":1,"column":866}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":176,"column":58},"generated":{"line":1,"column":873}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":179,"column":11},"generated":{"line":1,"column":875}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":179,"column":11},"generated":{"line":1,"column":882}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":190,"column":0},"generated":{"line":1,"column":886}},{"source":"../node_modules/unist-util-is/index.js","name":"propsFactory","original":{"line":190,"column":9},"generated":{"line":1,"column":895}},{"source":"../node_modules/unist-util-is/index.js","name":"check","original":{"line":190,"column":22},"generated":{"line":1,"column":897}},{"source":"../node_modules/unist-util-is/index.js","name":"castFactory","original":{"line":191,"column":9},"generated":{"line":1,"column":900}},{"source":"../node_modules/unist-util-is/index.js","name":"castFactory","original":{"line":191,"column":9},"generated":{"line":1,"column":907}},{"source":"../node_modules/unist-util-is/index.js","name":"all","original":{"line":197,"column":11},"generated":{"line":1,"column":909}},{"source":"../node_modules/unist-util-is/index.js","name":"node","original":{"line":197,"column":15},"generated":{"line":1,"column":918}},{"source":"../node_modules/unist-util-is/index.js","name":"key","original":{"line":199,"column":8},"generated":{"line":1,"column":921}},{"source":"../node_modules/unist-util-is/index.js","name":"key","original":{"line":199,"column":8},"generated":{"line":1,"column":925}},{"source":"../node_modules/unist-util-is/index.js","name":"key","original":{"line":201,"column":9},"generated":{"line":1,"column":927}},{"source":"../node_modules/unist-util-is/index.js","name":"key","original":{"line":201,"column":9},"generated":{"line":1,"column":931}},{"source":"../node_modules/unist-util-is/index.js","name":"check","original":{"line":201,"column":16},"generated":{"line":1,"column":936}},{"source":"../node_modules/unist-util-is/index.js","name":"node","original":{"line":203,"column":10},"generated":{"line":1,"column":938}},{"source":"../node_modules/unist-util-is/index.js","name":"node","original":{"line":203,"column":10},"generated":{"line":1,"column":941}},{"source":"../node_modules/unist-util-is/index.js","name":"key","original":{"line":203,"column":15},"generated":{"line":1,"column":943}},{"source":"../node_modules/unist-util-is/index.js","name":"check","original":{"line":203,"column":24},"generated":{"line":1,"column":948}},{"source":"../node_modules/unist-util-is/index.js","name":"key","original":{"line":203,"column":30},"generated":{"line":1,"column":950}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":203,"column":36},"generated":{"line":1,"column":953}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":203,"column":43},"generated":{"line":1,"column":960}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":206,"column":11},"generated":{"line":1,"column":962}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":206,"column":11},"generated":{"line":1,"column":969}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":217,"column":0},"generated":{"line":1,"column":973}},{"source":"../node_modules/unist-util-is/index.js","name":"typeFactory","original":{"line":217,"column":9},"generated":{"line":1,"column":982}},{"source":"../node_modules/unist-util-is/index.js","name":"check","original":{"line":217,"column":21},"generated":{"line":1,"column":984}},{"source":"../node_modules/unist-util-is/index.js","name":"castFactory","original":{"line":218,"column":9},"generated":{"line":1,"column":987}},{"source":"../node_modules/unist-util-is/index.js","name":"castFactory","original":{"line":218,"column":9},"generated":{"line":1,"column":994}},{"source":"../node_modules/unist-util-is/index.js","name":"type","original":{"line":223,"column":11},"generated":{"line":1,"column":996}},{"source":"../node_modules/unist-util-is/index.js","name":"node","original":{"line":223,"column":16},"generated":{"line":1,"column":1005}},{"source":"../node_modules/unist-util-is/index.js","name":"node","original":{"line":224,"column":11},"generated":{"line":1,"column":1008}},{"source":"../node_modules/unist-util-is/index.js","name":"node","original":{"line":224,"column":11},"generated":{"line":1,"column":1015}},{"source":"../node_modules/unist-util-is/index.js","name":"node","original":{"line":224,"column":19},"generated":{"line":1,"column":1018}},{"source":"../node_modules/unist-util-is/index.js","name":"type","original":{"line":224,"column":24},"generated":{"line":1,"column":1020}},{"source":"../node_modules/unist-util-is/index.js","name":"check","original":{"line":224,"column":33},"generated":{"line":1,"column":1027}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":234,"column":0},"generated":{"line":1,"column":1031}},{"source":"../node_modules/unist-util-is/index.js","name":"castFactory","original":{"line":234,"column":9},"generated":{"line":1,"column":1040}},{"source":"../node_modules/unist-util-is/index.js","name":"check","original":{"line":234,"column":21},"generated":{"line":1,"column":1042}},{"source":"../node_modules/unist-util-is/index.js","name":"assertion","original":{"line":235,"column":9},"generated":{"line":1,"column":1045}},{"source":"../node_modules/unist-util-is/index.js","name":"assertion","original":{"line":242,"column":11},"generated":{"line":1,"column":1052}},{"source":"../node_modules/unist-util-is/index.js","name":"parameters","original":{"line":242,"column":24},"generated":{"line":1,"column":1064}},{"source":"../node_modules/unist-util-is/index.js","name":"Boolean","original":{"line":244,"column":11},"generated":{"line":1,"column":1067}},{"source":"../node_modules/unist-util-is/index.js","name":"Boolean","original":{"line":244,"column":11},"generated":{"line":1,"column":1074}},{"source":"../node_modules/unist-util-is/index.js","name":"check","original":{"line":244,"column":19},"generated":{"line":1,"column":1082}},{"source":"../node_modules/unist-util-is/index.js","name":"call","original":{"line":244,"column":25},"generated":{"line":1,"column":1084}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":244,"column":30},"generated":{"line":1,"column":1089}},{"source":"../node_modules/unist-util-is/index.js","name":"parameters","original":{"line":244,"column":39},"generated":{"line":1,"column":1097}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":249,"column":0},"generated":{"line":1,"column":1102}},{"source":"../node_modules/unist-util-is/index.js","name":"ok","original":{"line":249,"column":9},"generated":{"line":1,"column":1111}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":250,"column":9},"generated":{"line":1,"column":1115}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":250,"column":9},"generated":{"line":1,"column":1122}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":251,"column":1},"generated":{"line":1,"column":1124}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":251,"column":1},"generated":{"line":1,"column":1132}},{"source":"../node_modules/unist-util-is/index.js","original":{"line":251,"column":1},"generated":{"line":1,"column":1140}}],"sources":{"../node_modules/unist-util-is/index.js":"/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n"},"lineCount":null}},"error":null,"hash":"7eb79be81dc4f784cc6c2f6c0ac7dc8c","cacheData":{"env":{}}}