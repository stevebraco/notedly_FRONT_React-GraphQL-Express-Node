{"id":"kSFT","dependencies":[{"name":"/Users/steve/Documents/Projects/notedly_app/web/package.json","includedInParent":true,"mtime":1634550415413},{"name":"/Users/steve/Documents/Projects/notedly_app/web/.babelrc","includedInParent":true,"mtime":1634038347786},{"name":"/Users/steve/Documents/Projects/notedly_app/web/node_modules/space-separated-tokens/package.json","includedInParent":true,"mtime":1634309499862}],"generated":{"js":"\"use strict\";function t(t){const r=String(t||\"\").trim();return r?r.split(/[ \\t\\n\\r\\f]+/g):[]}function r(t){return t.join(\" \").trim()}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.parse=t,exports.stringify=r;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/space-separated-tokens/index.js","original":{"line":20,"column":1},"generated":{"line":1,"column":0}},{"source":"../node_modules/space-separated-tokens/index.js","original":{"line":7,"column":7},"generated":{"line":1,"column":13}},{"source":"../node_modules/space-separated-tokens/index.js","name":"parse","original":{"line":7,"column":16},"generated":{"line":1,"column":22}},{"source":"../node_modules/space-separated-tokens/index.js","name":"value","original":{"line":7,"column":22},"generated":{"line":1,"column":24}},{"source":"../node_modules/space-separated-tokens/index.js","name":"input","original":{"line":8,"column":8},"generated":{"line":1,"column":27}},{"source":"../node_modules/space-separated-tokens/index.js","name":"input","original":{"line":8,"column":8},"generated":{"line":1,"column":33}},{"source":"../node_modules/space-separated-tokens/index.js","name":"String","original":{"line":8,"column":16},"generated":{"line":1,"column":35}},{"source":"../node_modules/space-separated-tokens/index.js","name":"value","original":{"line":8,"column":23},"generated":{"line":1,"column":42}},{"source":"../node_modules/space-separated-tokens/index.js","original":{"line":8,"column":32},"generated":{"line":1,"column":45}},{"source":"../node_modules/space-separated-tokens/index.js","name":"trim","original":{"line":8,"column":36},"generated":{"line":1,"column":49}},{"source":"../node_modules/space-separated-tokens/index.js","name":"input","original":{"line":9,"column":9},"generated":{"line":1,"column":56}},{"source":"../node_modules/space-separated-tokens/index.js","name":"input","original":{"line":9,"column":9},"generated":{"line":1,"column":63}},{"source":"../node_modules/space-separated-tokens/index.js","name":"input","original":{"line":9,"column":17},"generated":{"line":1,"column":65}},{"source":"../node_modules/space-separated-tokens/index.js","name":"split","original":{"line":9,"column":23},"generated":{"line":1,"column":67}},{"source":"../node_modules/space-separated-tokens/index.js","original":{"line":9,"column":29},"generated":{"line":1,"column":73}},{"source":"../node_modules/space-separated-tokens/index.js","original":{"line":9,"column":48},"generated":{"line":1,"column":90}},{"source":"../node_modules/space-separated-tokens/index.js","original":{"line":18,"column":7},"generated":{"line":1,"column":93}},{"source":"../node_modules/space-separated-tokens/index.js","name":"stringify","original":{"line":18,"column":16},"generated":{"line":1,"column":102}},{"source":"../node_modules/space-separated-tokens/index.js","name":"values","original":{"line":18,"column":26},"generated":{"line":1,"column":104}},{"source":"../node_modules/space-separated-tokens/index.js","name":"values","original":{"line":19,"column":9},"generated":{"line":1,"column":107}},{"source":"../node_modules/space-separated-tokens/index.js","name":"values","original":{"line":19,"column":9},"generated":{"line":1,"column":114}},{"source":"../node_modules/space-separated-tokens/index.js","name":"join","original":{"line":19,"column":16},"generated":{"line":1,"column":116}},{"source":"../node_modules/space-separated-tokens/index.js","original":{"line":19,"column":21},"generated":{"line":1,"column":121}},{"source":"../node_modules/space-separated-tokens/index.js","name":"trim","original":{"line":19,"column":26},"generated":{"line":1,"column":126}},{"source":"../node_modules/space-separated-tokens/index.js","original":{"line":20,"column":1},"generated":{"line":1,"column":133}},{"source":"../node_modules/space-separated-tokens/index.js","original":{"line":20,"column":1},"generated":{"line":1,"column":140}},{"source":"../node_modules/space-separated-tokens/index.js","original":{"line":20,"column":1},"generated":{"line":1,"column":155}},{"source":"../node_modules/space-separated-tokens/index.js","original":{"line":20,"column":1},"generated":{"line":1,"column":163}},{"source":"../node_modules/space-separated-tokens/index.js","original":{"line":20,"column":1},"generated":{"line":1,"column":176}},{"source":"../node_modules/space-separated-tokens/index.js","original":{"line":20,"column":1},"generated":{"line":1,"column":177}},{"source":"../node_modules/space-separated-tokens/index.js","original":{"line":20,"column":1},"generated":{"line":1,"column":184}},{"source":"../node_modules/space-separated-tokens/index.js","original":{"line":20,"column":1},"generated":{"line":1,"column":188}},{"source":"../node_modules/space-separated-tokens/index.js","original":{"line":20,"column":1},"generated":{"line":1,"column":196}},{"source":"../node_modules/space-separated-tokens/index.js","original":{"line":20,"column":1},"generated":{"line":1,"column":202}},{"source":"../node_modules/space-separated-tokens/index.js","original":{"line":20,"column":1},"generated":{"line":1,"column":204}},{"source":"../node_modules/space-separated-tokens/index.js","original":{"line":20,"column":1},"generated":{"line":1,"column":212}},{"source":"../node_modules/space-separated-tokens/index.js","original":{"line":20,"column":1},"generated":{"line":1,"column":222}}],"sources":{"../node_modules/space-separated-tokens/index.js":"/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n"},"lineCount":null}},"error":null,"hash":"fec278e85ef8485e746f9d104048f646","cacheData":{"env":{}}}