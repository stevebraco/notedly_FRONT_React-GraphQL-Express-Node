{"id":"../node_modules/unist-builder/index.js","dependencies":[{"name":"/Users/steve/Documents/Projects/notedly_app/web/package.json","includedInParent":true,"mtime":1634207375173},{"name":"/Users/steve/Documents/Projects/notedly_app/web/.babelrc","includedInParent":true,"mtime":1634038347786},{"name":"/Users/steve/Documents/Projects/notedly_app/web/node_modules/unist-builder/package.json","includedInParent":true,"mtime":1634207374539}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.u = void 0;\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\nvar u =\n/**\n* @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n*/\n\n/**\n * @param {string} type Type of node\n * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n * @param {ChildrenOrValue} [value] `children` or `value` of node\n * @returns {Node}\n */\nfunction (type, props, value) {\n  /** @type {Node} */\n  var node = {\n    type: String(type)\n  };\n\n  if ((value === undefined || value === null) && (typeof props === 'string' || Array.isArray(props))) {\n    value = props;\n  } else {\n    Object.assign(node, props);\n  }\n\n  if (Array.isArray(value)) {\n    node.children = value;\n  } else if (value !== undefined && value !== null) {\n    node.value = String(value);\n  }\n\n  return node;\n};\n\nexports.u = u;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/unist-builder/index.js","original":{"line":1,"column":0}},{"generated":{"line":22,"column":0},"source":"../node_modules/unist-builder/index.js","original":{"line":16,"column":7}},{"name":"u","generated":{"line":22,"column":4},"source":"../node_modules/unist-builder/index.js","original":{"line":16,"column":11}},{"generated":{"line":22,"column":5},"source":"../node_modules/unist-builder/index.js","original":{"line":16,"column":12}},{"generated":{"line":23,"column":0},"source":"../node_modules/unist-builder/index.js","original":{"line":16,"column":15}},{"generated":{"line":27,"column":0},"source":"../node_modules/unist-builder/index.js","original":{"line":19,"column":2}},{"generated":{"line":33,"column":0},"source":"../node_modules/unist-builder/index.js","original":{"line":25,"column":2}},{"name":"type","generated":{"line":33,"column":10},"source":"../node_modules/unist-builder/index.js","original":{"line":25,"column":12}},{"generated":{"line":33,"column":14},"source":"../node_modules/unist-builder/index.js","original":{"line":25,"column":2}},{"name":"props","generated":{"line":33,"column":16},"source":"../node_modules/unist-builder/index.js","original":{"line":25,"column":18}},{"generated":{"line":33,"column":21},"source":"../node_modules/unist-builder/index.js","original":{"line":25,"column":2}},{"name":"value","generated":{"line":33,"column":23},"source":"../node_modules/unist-builder/index.js","original":{"line":25,"column":25}},{"generated":{"line":33,"column":28},"source":"../node_modules/unist-builder/index.js","original":{"line":25,"column":2}},{"generated":{"line":33,"column":30},"source":"../node_modules/unist-builder/index.js","original":{"line":25,"column":32}},{"generated":{"line":34,"column":0},"source":"../node_modules/unist-builder/index.js","original":{"line":26,"column":4}},{"generated":{"line":35,"column":0},"source":"../node_modules/unist-builder/index.js","original":{"line":27,"column":4}},{"name":"node","generated":{"line":35,"column":6},"source":"../node_modules/unist-builder/index.js","original":{"line":27,"column":8}},{"generated":{"line":35,"column":10},"source":"../node_modules/unist-builder/index.js","original":{"line":27,"column":12}},{"generated":{"line":35,"column":13},"source":"../node_modules/unist-builder/index.js","original":{"line":27,"column":15}},{"name":"type","generated":{"line":36,"column":0},"source":"../node_modules/unist-builder/index.js","original":{"line":27,"column":16}},{"name":"type","generated":{"line":36,"column":4},"source":"../node_modules/unist-builder/index.js","original":{"line":27,"column":16}},{"generated":{"line":36,"column":8},"source":"../node_modules/unist-builder/index.js","original":{"line":27,"column":20}},{"name":"String","generated":{"line":36,"column":10},"source":"../node_modules/unist-builder/index.js","original":{"line":27,"column":22}},{"generated":{"line":36,"column":16},"source":"../node_modules/unist-builder/index.js","original":{"line":27,"column":28}},{"name":"type","generated":{"line":36,"column":17},"source":"../node_modules/unist-builder/index.js","original":{"line":27,"column":29}},{"generated":{"line":36,"column":21},"source":"../node_modules/unist-builder/index.js","original":{"line":27,"column":28}},{"generated":{"line":37,"column":0},"source":"../node_modules/unist-builder/index.js","original":{"line":27,"column":15}},{"generated":{"line":37,"column":3},"source":"../node_modules/unist-builder/index.js","original":{"line":27,"column":4}},{"generated":{"line":39,"column":0},"source":"../node_modules/unist-builder/index.js","original":{"line":29,"column":4}},{"generated":{"line":39,"column":6},"source":"../node_modules/unist-builder/index.js","original":{"line":30,"column":6}},{"name":"value","generated":{"line":39,"column":7},"source":"../node_modules/unist-builder/index.js","original":{"line":30,"column":7}},{"generated":{"line":39,"column":12},"source":"../node_modules/unist-builder/index.js","original":{"line":30,"column":12}},{"name":"undefined","generated":{"line":39,"column":17},"source":"../node_modules/unist-builder/index.js","original":{"line":30,"column":17}},{"generated":{"line":39,"column":26},"source":"../node_modules/unist-builder/index.js","original":{"line":30,"column":7}},{"name":"value","generated":{"line":39,"column":30},"source":"../node_modules/unist-builder/index.js","original":{"line":30,"column":30}},{"generated":{"line":39,"column":35},"source":"../node_modules/unist-builder/index.js","original":{"line":30,"column":35}},{"generated":{"line":39,"column":40},"source":"../node_modules/unist-builder/index.js","original":{"line":30,"column":40}},{"generated":{"line":39,"column":44},"source":"../node_modules/unist-builder/index.js","original":{"line":30,"column":6}},{"generated":{"line":39,"column":50},"source":"../node_modules/unist-builder/index.js","original":{"line":31,"column":7}},{"name":"props","generated":{"line":39,"column":57},"source":"../node_modules/unist-builder/index.js","original":{"line":31,"column":14}},{"generated":{"line":39,"column":62},"source":"../node_modules/unist-builder/index.js","original":{"line":31,"column":7}},{"generated":{"line":39,"column":67},"source":"../node_modules/unist-builder/index.js","original":{"line":31,"column":24}},{"generated":{"line":39,"column":75},"source":"../node_modules/unist-builder/index.js","original":{"line":31,"column":7}},{"name":"Array","generated":{"line":39,"column":79},"source":"../node_modules/unist-builder/index.js","original":{"line":31,"column":36}},{"generated":{"line":39,"column":84},"source":"../node_modules/unist-builder/index.js","original":{"line":31,"column":41}},{"name":"isArray","generated":{"line":39,"column":85},"source":"../node_modules/unist-builder/index.js","original":{"line":31,"column":42}},{"generated":{"line":39,"column":92},"source":"../node_modules/unist-builder/index.js","original":{"line":31,"column":36}},{"name":"props","generated":{"line":39,"column":93},"source":"../node_modules/unist-builder/index.js","original":{"line":31,"column":50}},{"generated":{"line":39,"column":98},"source":"../node_modules/unist-builder/index.js","original":{"line":31,"column":36}},{"generated":{"line":39,"column":99},"source":"../node_modules/unist-builder/index.js","original":{"line":30,"column":6}},{"generated":{"line":39,"column":100},"source":"../node_modules/unist-builder/index.js","original":{"line":29,"column":4}},{"generated":{"line":39,"column":102},"source":"../node_modules/unist-builder/index.js","original":{"line":32,"column":6}},{"name":"value","generated":{"line":40,"column":0},"source":"../node_modules/unist-builder/index.js","original":{"line":33,"column":6}},{"name":"value","generated":{"line":40,"column":4},"source":"../node_modules/unist-builder/index.js","original":{"line":33,"column":6}},{"generated":{"line":40,"column":9},"source":"../node_modules/unist-builder/index.js","original":{"line":33,"column":11}},{"name":"props","generated":{"line":40,"column":12},"source":"../node_modules/unist-builder/index.js","original":{"line":33,"column":14}},{"generated":{"line":40,"column":17},"source":"../node_modules/unist-builder/index.js","original":{"line":33,"column":6}},{"generated":{"line":41,"column":0},"source":"../node_modules/unist-builder/index.js","original":{"line":34,"column":5}},{"generated":{"line":41,"column":3},"source":"../node_modules/unist-builder/index.js","original":{"line":29,"column":4}},{"generated":{"line":41,"column":9},"source":"../node_modules/unist-builder/index.js","original":{"line":34,"column":11}},{"name":"Object","generated":{"line":42,"column":0},"source":"../node_modules/unist-builder/index.js","original":{"line":35,"column":6}},{"name":"Object","generated":{"line":42,"column":4},"source":"../node_modules/unist-builder/index.js","original":{"line":35,"column":6}},{"generated":{"line":42,"column":10},"source":"../node_modules/unist-builder/index.js","original":{"line":35,"column":12}},{"name":"assign","generated":{"line":42,"column":11},"source":"../node_modules/unist-builder/index.js","original":{"line":35,"column":13}},{"generated":{"line":42,"column":17},"source":"../node_modules/unist-builder/index.js","original":{"line":35,"column":6}},{"name":"node","generated":{"line":42,"column":18},"source":"../node_modules/unist-builder/index.js","original":{"line":35,"column":20}},{"generated":{"line":42,"column":22},"source":"../node_modules/unist-builder/index.js","original":{"line":35,"column":6}},{"name":"props","generated":{"line":42,"column":24},"source":"../node_modules/unist-builder/index.js","original":{"line":35,"column":26}},{"generated":{"line":42,"column":29},"source":"../node_modules/unist-builder/index.js","original":{"line":35,"column":6}},{"generated":{"line":43,"column":0},"source":"../node_modules/unist-builder/index.js","original":{"line":36,"column":5}},{"generated":{"line":45,"column":0},"source":"../node_modules/unist-builder/index.js","original":{"line":38,"column":4}},{"name":"Array","generated":{"line":45,"column":6},"source":"../node_modules/unist-builder/index.js","original":{"line":38,"column":8}},{"generated":{"line":45,"column":11},"source":"../node_modules/unist-builder/index.js","original":{"line":38,"column":13}},{"name":"isArray","generated":{"line":45,"column":12},"source":"../node_modules/unist-builder/index.js","original":{"line":38,"column":14}},{"generated":{"line":45,"column":19},"source":"../node_modules/unist-builder/index.js","original":{"line":38,"column":8}},{"name":"value","generated":{"line":45,"column":20},"source":"../node_modules/unist-builder/index.js","original":{"line":38,"column":22}},{"generated":{"line":45,"column":25},"source":"../node_modules/unist-builder/index.js","original":{"line":38,"column":8}},{"generated":{"line":45,"column":26},"source":"../node_modules/unist-builder/index.js","original":{"line":38,"column":4}},{"generated":{"line":45,"column":28},"source":"../node_modules/unist-builder/index.js","original":{"line":38,"column":30}},{"name":"node","generated":{"line":46,"column":0},"source":"../node_modules/unist-builder/index.js","original":{"line":39,"column":6}},{"name":"node","generated":{"line":46,"column":4},"source":"../node_modules/unist-builder/index.js","original":{"line":39,"column":6}},{"generated":{"line":46,"column":8},"source":"../node_modules/unist-builder/index.js","original":{"line":39,"column":10}},{"name":"children","generated":{"line":46,"column":9},"source":"../node_modules/unist-builder/index.js","original":{"line":39,"column":11}},{"generated":{"line":46,"column":17},"source":"../node_modules/unist-builder/index.js","original":{"line":39,"column":6}},{"name":"value","generated":{"line":46,"column":20},"source":"../node_modules/unist-builder/index.js","original":{"line":39,"column":22}},{"generated":{"line":46,"column":25},"source":"../node_modules/unist-builder/index.js","original":{"line":39,"column":6}},{"generated":{"line":47,"column":0},"source":"../node_modules/unist-builder/index.js","original":{"line":40,"column":5}},{"generated":{"line":47,"column":3},"source":"../node_modules/unist-builder/index.js","original":{"line":38,"column":4}},{"generated":{"line":47,"column":9},"source":"../node_modules/unist-builder/index.js","original":{"line":40,"column":11}},{"name":"value","generated":{"line":47,"column":13},"source":"../node_modules/unist-builder/index.js","original":{"line":40,"column":15}},{"generated":{"line":47,"column":18},"source":"../node_modules/unist-builder/index.js","original":{"line":40,"column":20}},{"name":"undefined","generated":{"line":47,"column":23},"source":"../node_modules/unist-builder/index.js","original":{"line":40,"column":25}},{"generated":{"line":47,"column":32},"source":"../node_modules/unist-builder/index.js","original":{"line":40,"column":15}},{"name":"value","generated":{"line":47,"column":36},"source":"../node_modules/unist-builder/index.js","original":{"line":40,"column":38}},{"generated":{"line":47,"column":41},"source":"../node_modules/unist-builder/index.js","original":{"line":40,"column":43}},{"generated":{"line":47,"column":46},"source":"../node_modules/unist-builder/index.js","original":{"line":40,"column":48}},{"generated":{"line":47,"column":50},"source":"../node_modules/unist-builder/index.js","original":{"line":40,"column":11}},{"generated":{"line":47,"column":52},"source":"../node_modules/unist-builder/index.js","original":{"line":40,"column":54}},{"name":"node","generated":{"line":48,"column":0},"source":"../node_modules/unist-builder/index.js","original":{"line":41,"column":6}},{"name":"node","generated":{"line":48,"column":4},"source":"../node_modules/unist-builder/index.js","original":{"line":41,"column":6}},{"generated":{"line":48,"column":8},"source":"../node_modules/unist-builder/index.js","original":{"line":41,"column":10}},{"name":"value","generated":{"line":48,"column":9},"source":"../node_modules/unist-builder/index.js","original":{"line":41,"column":11}},{"generated":{"line":48,"column":14},"source":"../node_modules/unist-builder/index.js","original":{"line":41,"column":6}},{"name":"String","generated":{"line":48,"column":17},"source":"../node_modules/unist-builder/index.js","original":{"line":41,"column":19}},{"generated":{"line":48,"column":23},"source":"../node_modules/unist-builder/index.js","original":{"line":41,"column":25}},{"name":"value","generated":{"line":48,"column":24},"source":"../node_modules/unist-builder/index.js","original":{"line":41,"column":26}},{"generated":{"line":48,"column":29},"source":"../node_modules/unist-builder/index.js","original":{"line":41,"column":25}},{"generated":{"line":48,"column":30},"source":"../node_modules/unist-builder/index.js","original":{"line":41,"column":6}},{"generated":{"line":49,"column":0},"source":"../node_modules/unist-builder/index.js","original":{"line":42,"column":5}},{"generated":{"line":51,"column":0},"source":"../node_modules/unist-builder/index.js","original":{"line":44,"column":4}},{"name":"node","generated":{"line":51,"column":9},"source":"../node_modules/unist-builder/index.js","original":{"line":44,"column":11}},{"generated":{"line":51,"column":13},"source":"../node_modules/unist-builder/index.js","original":{"line":44,"column":4}},{"generated":{"line":52,"column":0},"source":"../node_modules/unist-builder/index.js","original":{"line":45,"column":3}},{"generated":{"line":52,"column":1},"source":"../node_modules/unist-builder/index.js","original":{"line":16,"column":7}}],"sources":{"../node_modules/unist-builder/index.js":"/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n"},"lineCount":null}},"error":null,"hash":"32d3c4e6203cffab3bc99177807d1e81","cacheData":{"env":{}}}