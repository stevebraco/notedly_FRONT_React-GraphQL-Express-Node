{"id":"../node_modules/remark-rehype/index.js","dependencies":[{"name":"/Users/steve/Documents/Projects/notedly_app/web/package.json","includedInParent":true,"mtime":1634207375173},{"name":"/Users/steve/Documents/Projects/notedly_app/web/.babelrc","includedInParent":true,"mtime":1634038347786},{"name":"/Users/steve/Documents/Projects/notedly_app/web/node_modules/remark-rehype/package.json","includedInParent":true,"mtime":1634207374579},{"name":"mdast-util-to-hast","loc":{"line":11,"column":21},"parent":"/Users/steve/Documents/Projects/notedly_app/web/node_modules/remark-rehype/index.js","resolved":"/Users/steve/Documents/Projects/notedly_app/web/node_modules/mdast-util-to-hast/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _mdastUtilToHast = require(\"mdast-util-to-hast\");\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\nconst remarkRehype =\n/** @type {(import('unified').Plugin<[Processor, Options?]|[Options]|[], MdastRoot>)} */\nfunction (destination, options) {\n  return destination && 'run' in destination ? bridge(destination, options) : mutate(destination);\n};\n\nvar _default = remarkRehype;\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\n\nexports.default = _default;\n\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run((0, _mdastUtilToHast.toHast)(node, options), file, error => {\n      next(error);\n    });\n  };\n}\n/**\n * Mutate-mode.\n * Further transformers run on the nlcst tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\n\n\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned for `toHast`.\n  return node => (0, _mdastUtilToHast.toHast)(node, options);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/remark-rehype/index.js","original":{"line":11,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/remark-rehype/index.js","original":{"line":1,"column":0}},{"generated":{"line":19,"column":0},"source":"../node_modules/remark-rehype/index.js","original":{"line":28,"column":0}},{"name":"remarkRehype","generated":{"line":19,"column":6},"source":"../node_modules/remark-rehype/index.js","original":{"line":28,"column":6}},{"generated":{"line":19,"column":18},"source":"../node_modules/remark-rehype/index.js","original":{"line":28,"column":18}},{"generated":{"line":20,"column":0},"source":"../node_modules/remark-rehype/index.js","original":{"line":29,"column":2}},{"generated":{"line":21,"column":0},"source":"../node_modules/remark-rehype/index.js","original":{"line":31,"column":4}},{"name":"destination","generated":{"line":21,"column":10},"source":"../node_modules/remark-rehype/index.js","original":{"line":31,"column":14}},{"generated":{"line":21,"column":21},"source":"../node_modules/remark-rehype/index.js","original":{"line":31,"column":4}},{"name":"options","generated":{"line":21,"column":23},"source":"../node_modules/remark-rehype/index.js","original":{"line":31,"column":27}},{"generated":{"line":21,"column":30},"source":"../node_modules/remark-rehype/index.js","original":{"line":31,"column":4}},{"generated":{"line":21,"column":32},"source":"../node_modules/remark-rehype/index.js","original":{"line":31,"column":36}},{"generated":{"line":22,"column":0},"source":"../node_modules/remark-rehype/index.js","original":{"line":32,"column":6}},{"name":"destination","generated":{"line":22,"column":9},"source":"../node_modules/remark-rehype/index.js","original":{"line":32,"column":13}},{"generated":{"line":22,"column":20},"source":"../node_modules/remark-rehype/index.js","original":{"line":32,"column":24}},{"generated":{"line":22,"column":24},"source":"../node_modules/remark-rehype/index.js","original":{"line":32,"column":28}},{"name":"destination","generated":{"line":22,"column":33},"source":"../node_modules/remark-rehype/index.js","original":{"line":32,"column":37}},{"generated":{"line":22,"column":44},"source":"../node_modules/remark-rehype/index.js","original":{"line":32,"column":13}},{"name":"bridge","generated":{"line":22,"column":47},"source":"../node_modules/remark-rehype/index.js","original":{"line":33,"column":10}},{"generated":{"line":22,"column":53},"source":"../node_modules/remark-rehype/index.js","original":{"line":33,"column":16}},{"name":"destination","generated":{"line":22,"column":54},"source":"../node_modules/remark-rehype/index.js","original":{"line":33,"column":17}},{"generated":{"line":22,"column":65},"source":"../node_modules/remark-rehype/index.js","original":{"line":33,"column":16}},{"name":"options","generated":{"line":22,"column":67},"source":"../node_modules/remark-rehype/index.js","original":{"line":33,"column":30}},{"generated":{"line":22,"column":74},"source":"../node_modules/remark-rehype/index.js","original":{"line":33,"column":16}},{"generated":{"line":22,"column":75},"source":"../node_modules/remark-rehype/index.js","original":{"line":32,"column":13}},{"name":"mutate","generated":{"line":22,"column":78},"source":"../node_modules/remark-rehype/index.js","original":{"line":34,"column":10}},{"generated":{"line":22,"column":84},"source":"../node_modules/remark-rehype/index.js","original":{"line":34,"column":16}},{"name":"destination","generated":{"line":22,"column":85},"source":"../node_modules/remark-rehype/index.js","original":{"line":34,"column":17}},{"generated":{"line":22,"column":96},"source":"../node_modules/remark-rehype/index.js","original":{"line":34,"column":16}},{"generated":{"line":22,"column":97},"source":"../node_modules/remark-rehype/index.js","original":{"line":32,"column":6}},{"generated":{"line":23,"column":0},"source":"../node_modules/remark-rehype/index.js","original":{"line":35,"column":5}},{"generated":{"line":23,"column":1},"source":"../node_modules/remark-rehype/index.js","original":{"line":28,"column":0}},{"name":"remarkRehype","generated":{"line":25,"column":15},"source":"../node_modules/remark-rehype/index.js","original":{"line":38,"column":15}},{"generated":{"line":26,"column":0},"source":"../node_modules/remark-rehype/index.js","original":{"line":40,"column":0}},{"generated":{"line":35,"column":0},"source":"../node_modules/remark-rehype/index.js","original":{"line":46,"column":0}},{"name":"bridge","generated":{"line":35,"column":9},"source":"../node_modules/remark-rehype/index.js","original":{"line":46,"column":9}},{"generated":{"line":35,"column":15},"source":"../node_modules/remark-rehype/index.js","original":{"line":46,"column":0}},{"name":"destination","generated":{"line":35,"column":16},"source":"../node_modules/remark-rehype/index.js","original":{"line":46,"column":16}},{"generated":{"line":35,"column":27},"source":"../node_modules/remark-rehype/index.js","original":{"line":46,"column":0}},{"name":"options","generated":{"line":35,"column":29},"source":"../node_modules/remark-rehype/index.js","original":{"line":46,"column":29}},{"generated":{"line":35,"column":36},"source":"../node_modules/remark-rehype/index.js","original":{"line":46,"column":0}},{"generated":{"line":35,"column":38},"source":"../node_modules/remark-rehype/index.js","original":{"line":46,"column":38}},{"generated":{"line":36,"column":0},"source":"../node_modules/remark-rehype/index.js","original":{"line":47,"column":2}},{"generated":{"line":36,"column":9},"source":"../node_modules/remark-rehype/index.js","original":{"line":47,"column":9}},{"name":"node","generated":{"line":36,"column":10},"source":"../node_modules/remark-rehype/index.js","original":{"line":47,"column":10}},{"generated":{"line":36,"column":14},"source":"../node_modules/remark-rehype/index.js","original":{"line":47,"column":9}},{"name":"file","generated":{"line":36,"column":16},"source":"../node_modules/remark-rehype/index.js","original":{"line":47,"column":16}},{"generated":{"line":36,"column":20},"source":"../node_modules/remark-rehype/index.js","original":{"line":47,"column":9}},{"name":"next","generated":{"line":36,"column":22},"source":"../node_modules/remark-rehype/index.js","original":{"line":47,"column":22}},{"generated":{"line":36,"column":26},"source":"../node_modules/remark-rehype/index.js","original":{"line":47,"column":9}},{"generated":{"line":36,"column":31},"source":"../node_modules/remark-rehype/index.js","original":{"line":47,"column":31}},{"name":"destination","generated":{"line":37,"column":0},"source":"../node_modules/remark-rehype/index.js","original":{"line":48,"column":4}},{"name":"destination","generated":{"line":37,"column":4},"source":"../node_modules/remark-rehype/index.js","original":{"line":48,"column":4}},{"generated":{"line":37,"column":15},"source":"../node_modules/remark-rehype/index.js","original":{"line":48,"column":15}},{"name":"run","generated":{"line":37,"column":16},"source":"../node_modules/remark-rehype/index.js","original":{"line":48,"column":16}},{"generated":{"line":37,"column":19},"source":"../node_modules/remark-rehype/index.js","original":{"line":48,"column":4}},{"generated":{"line":37,"column":20},"source":"../node_modules/remark-rehype/index.js","original":{"line":48,"column":20}},{"name":"node","generated":{"line":37,"column":49},"source":"../node_modules/remark-rehype/index.js","original":{"line":48,"column":27}},{"generated":{"line":37,"column":53},"source":"../node_modules/remark-rehype/index.js","original":{"line":48,"column":20}},{"name":"options","generated":{"line":37,"column":55},"source":"../node_modules/remark-rehype/index.js","original":{"line":48,"column":33}},{"generated":{"line":37,"column":62},"source":"../node_modules/remark-rehype/index.js","original":{"line":48,"column":20}},{"generated":{"line":37,"column":63},"source":"../node_modules/remark-rehype/index.js","original":{"line":48,"column":4}},{"name":"file","generated":{"line":37,"column":65},"source":"../node_modules/remark-rehype/index.js","original":{"line":48,"column":43}},{"generated":{"line":37,"column":69},"source":"../node_modules/remark-rehype/index.js","original":{"line":48,"column":4}},{"name":"error","generated":{"line":37,"column":71},"source":"../node_modules/remark-rehype/index.js","original":{"line":48,"column":50}},{"generated":{"line":37,"column":76},"source":"../node_modules/remark-rehype/index.js","original":{"line":48,"column":49}},{"generated":{"line":37,"column":80},"source":"../node_modules/remark-rehype/index.js","original":{"line":48,"column":60}},{"name":"next","generated":{"line":38,"column":0},"source":"../node_modules/remark-rehype/index.js","original":{"line":49,"column":6}},{"name":"next","generated":{"line":38,"column":6},"source":"../node_modules/remark-rehype/index.js","original":{"line":49,"column":6}},{"generated":{"line":38,"column":10},"source":"../node_modules/remark-rehype/index.js","original":{"line":49,"column":10}},{"name":"error","generated":{"line":38,"column":11},"source":"../node_modules/remark-rehype/index.js","original":{"line":49,"column":11}},{"generated":{"line":38,"column":16},"source":"../node_modules/remark-rehype/index.js","original":{"line":49,"column":10}},{"generated":{"line":38,"column":17},"source":"../node_modules/remark-rehype/index.js","original":{"line":49,"column":6}},{"generated":{"line":39,"column":0},"source":"../node_modules/remark-rehype/index.js","original":{"line":50,"column":5}},{"generated":{"line":39,"column":5},"source":"../node_modules/remark-rehype/index.js","original":{"line":48,"column":4}},{"generated":{"line":40,"column":0},"source":"../node_modules/remark-rehype/index.js","original":{"line":51,"column":3}},{"generated":{"line":40,"column":3},"source":"../node_modules/remark-rehype/index.js","original":{"line":47,"column":2}},{"generated":{"line":41,"column":0},"source":"../node_modules/remark-rehype/index.js","original":{"line":52,"column":1}},{"generated":{"line":42,"column":0},"source":"../node_modules/remark-rehype/index.js","original":{"line":54,"column":0}},{"generated":{"line":50,"column":0},"source":"../node_modules/remark-rehype/index.js","original":{"line":60,"column":0}},{"name":"mutate","generated":{"line":50,"column":9},"source":"../node_modules/remark-rehype/index.js","original":{"line":60,"column":9}},{"generated":{"line":50,"column":15},"source":"../node_modules/remark-rehype/index.js","original":{"line":60,"column":0}},{"name":"options","generated":{"line":50,"column":16},"source":"../node_modules/remark-rehype/index.js","original":{"line":60,"column":16}},{"generated":{"line":50,"column":23},"source":"../node_modules/remark-rehype/index.js","original":{"line":60,"column":0}},{"generated":{"line":50,"column":25},"source":"../node_modules/remark-rehype/index.js","original":{"line":60,"column":25}},{"generated":{"line":51,"column":0},"source":"../node_modules/remark-rehype/index.js","original":{"line":61,"column":2}},{"generated":{"line":52,"column":0},"source":"../node_modules/remark-rehype/index.js","original":{"line":62,"column":2}},{"name":"node","generated":{"line":52,"column":9},"source":"../node_modules/remark-rehype/index.js","original":{"line":62,"column":10}},{"generated":{"line":52,"column":13},"source":"../node_modules/remark-rehype/index.js","original":{"line":62,"column":9}},{"generated":{"line":52,"column":17},"source":"../node_modules/remark-rehype/index.js","original":{"line":62,"column":19}},{"name":"node","generated":{"line":52,"column":46},"source":"../node_modules/remark-rehype/index.js","original":{"line":62,"column":26}},{"generated":{"line":52,"column":50},"source":"../node_modules/remark-rehype/index.js","original":{"line":62,"column":19}},{"name":"options","generated":{"line":52,"column":52},"source":"../node_modules/remark-rehype/index.js","original":{"line":62,"column":32}},{"generated":{"line":52,"column":59},"source":"../node_modules/remark-rehype/index.js","original":{"line":62,"column":19}},{"generated":{"line":52,"column":60},"source":"../node_modules/remark-rehype/index.js","original":{"line":62,"column":2}},{"generated":{"line":53,"column":0},"source":"../node_modules/remark-rehype/index.js","original":{"line":63,"column":1}}],"sources":{"../node_modules/remark-rehype/index.js":"/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin to bridge or mutate to rehype.\n *\n * If a destination is given, runs the destination with the new hast tree\n * (bridge-mode).\n * Without destination, returns the hast tree: further plugins run on that tree\n * (mutate-mode).\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further transformers run on the nlcst tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned for `toHast`.\n  return (node) => toHast(node, options)\n}\n"},"lineCount":null}},"error":null,"hash":"fe0505df0ce4b8bb08a84e0a2ab27d3c","cacheData":{"env":{}}}